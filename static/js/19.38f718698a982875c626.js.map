{"version":3,"sources":["webpack:///./node_modules/cropperjs/dist/cropper.esm.js","webpack:///./src/components/order/cropper.vue","webpack:///./src/components/order/cropper.vue?8a59","webpack:///./src/components/order/cropper.vue?0abc","webpack:///./src/pages/user/editmessage/personmessage.vue","webpack:///./src/pages/user/editmessage/personmessage.vue?a0ae","webpack:///./src/pages/user/editmessage/personmessage.vue?8a08"],"names":["WINDOW","window","NAMESPACE","CLASS_CROP","CLASS_DISABLED","CLASS_HIDDEN","CLASS_MODAL","CLASS_MOVE","EVENT_POINTER_DOWN","PointerEvent","EVENT_POINTER_MOVE","EVENT_POINTER_UP","EVENT_WHEEL","REGEXP_ACTIONS","REGEXP_DATA_URL","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","DEFAULTS","viewMode","dragMode","aspectRatio","NaN","data","preview","responsive","restore","checkCrossOrigin","checkOrientation","modal","guides","center","highlight","background","autoCrop","autoCropArea","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","wheelZoomRatio","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","minContainerWidth","minContainerHeight","ready","cropstart","cropmove","cropend","crop","zoom","_typeof","Symbol","iterator","obj","constructor","prototype","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","toConsumableArray","arr","Array","isArray","arr2","from","cropper_esm_isNaN","Number","isNaN","isNumber","value","isUndefined","isObject","cropper_esm_hasOwnProperty","hasOwnProperty","isPlainObject","_constructor","call","e","isFunction","forEach","callback","keys","cropper_esm_assign","assign","_len","arguments","args","_key","arg","REGEXP_DECIMALS","normalizeDecimalNumber","times","undefined","test","Math","round","REGEXP_SUFFIX","setStyle","element","styles","style","property","addClass","elem","classList","add","className","trim","indexOf","removeClass","remove","replace","toggleClass","added","REGEXP_HYPHENATE","hyphenate","toLowerCase","getData","name","dataset","getAttribute","setData","setAttribute","removeData","removeAttribute","REGEXP_SPACES","removeListener","type","listener","options","split","t","removeEventListener","addListener","_listener","once","originalListener","_len2","_key2","apply","addEventListener","dispatchEvent","event","Event","CustomEvent","detail","bubbles","cancelable","document","createEvent","initCustomEvent","getOffset","box","getBoundingClientRect","left","pageXOffset","documentElement","clientLeft","top","pageYOffset","clientTop","cropper_esm_location","location","REGEXP_ORIGINS","isCrossOriginURL","url","parts","match","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","getTransforms","_ref","rotate","scaleX","scaleY","translateX","translateY","values","push","transform","join","WebkitTransform","msTransform","getPointer","_ref2","endOnly","pageX","pageY","end","endX","endY","startX","startY","cropper_esm_isFinite","isFinite","getAdjustedSizes","_ref4","height","width","isValidNumber","adjustedWidth","fromCharCode","String","REGEXP_DATA_URL_HEAD","getOrientation","arrayBuffer","dataView","DataView","orientation","littleEndian","app1Start","ifdStart","getUint8","byteLength","offset","tiffOffset","start","str","getStringFromCharCode","endianness","getUint16","firstIFDOffset","getUint32","_length","_offset","setUint16","render","this","initContainer","initCanvas","initCropBox","renderCanvas","cropped","renderCropBox","container","cropper","containerData","max","offsetWidth","offsetHeight","imageData","rotated","abs","naturalWidth","naturalHeight","canvasWidth","canvasHeight","canvasData","oldLeft","oldTop","limited","limitCanvas","initialImageData","initialCanvasData","sizeLimited","positionLimited","cropBoxData","_getAdjustedSizes","minWidth","minHeight","maxWidth","Infinity","maxHeight","newCanvasLeft","newCanvasTop","minLeft","min","minTop","maxLeft","maxTop","changed","transformed","_getRotatedSizes","_ref5","degree","arc","PI","sinArc","sin","cosArc","cos","newWidth","newHeight","getRotatedSizes","canvas","renderImage","limitCropBox","image","output","initialCropBoxData","maxCropBoxWidth","maxCropBoxHeight","face","cropBox","disabled","initPreview","crossOrigin","crossOriginUrl","createElement","src","viewBox","appendChild","viewBoxImage","previews","ownerDocument","querySelectorAll","querySelector","el","img","html","innerHTML","cssText","resetPreview","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","ratio","getElementsByTagName","events","bind","onCropStart","cropStart","onWheel","wheel","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","unbind","handlers","getCanvasData","getCropBoxData","setCanvasData","n","setCropBoxData","setDragMode","dragBox","contains","_this","delta","preventDefault","wheeling","setTimeout","deltaY","wheelDelta","pointers","action","changedTouches","touch","identifier","pointerId","originalEvent","cropping","change","right","bottom","renderable","shiftKey","pointers2","ratios","pointer","range","x","y","check","side","move","pointer2","x1","y1","x2","y2","z1","sqrt","sort","a","b","p","methods","reset","clear","hasSameSize","isImg","replaced","uncreate","load","enable","disable","destroy","originalUrl","offsetX","offsetY","_canvasData","moveTo","_originalEvent","zoomTo","pivot","count","oldRatio","_ref3","rotateTo","_scaleX","scale","_scaleY","rounded","getContainerData","getImageData","sized","widthChanged","heightChanged","getCroppedCanvas","HTMLCanvasElement","_ref6","_ref7","_ref8","imageNaturalWidth","imageNaturalHeight","_ref6$rotate","_ref6$scaleX","_ref6$scaleY","_ref8$fillColor","fillColor","_ref8$imageSmoothingE","imageSmoothingEnabled","_ref8$imageSmoothingQ","imageSmoothingQuality","_ref8$maxWidth","_ref8$maxHeight","_ref8$minWidth","_ref8$minHeight","context","maxSizes","minSizes","destWidth","destHeight","params","source","getContext","fillStyle","fillRect","save","translate","drawImage","concat","map","param","floor","_getData","initialX","initialY","initialWidth","initialHeight","_options$imageSmoothi","sourceWidth","sourceHeight","srcX","srcY","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","setAspectRatio","mode","croppable","AnotherCropper","Cropper","tagName","Error","reloading","sizing","init","toDataURL","ArrayBuffer","read","base64","binary","atob","uint8","Uint8Array","charCodeAt","clone","xhr","XMLHttpRequest","done","ontimeout","onabort","onerror","onload","response","open","responseType","withCredentials","send","mimeType","btoa","_parseOrientation","parseOrientation","stop","onStart","onStop","complete","timeout","parentNode","insertBefore","nextSibling","_this2","IS_SAFARI","navigator","userAgent","build","sizingImage","body","removeChild","template","getElementsByClassName","unbuild","abort","clearTimeout","cropper_esm","headerImage","default","picValue","panel","postHeaderImg","heightAll","mounted","self","getElementById","components","Cell","cell","CellBox","cell_box","publishDynamic","$refs","selectImg","MouseEvent","getObjectURL","file","createObjectURL","URL","webkitURL","files","dataTransfer","size","croppedCanvas","roundedCanvas","getRoundedCanvas","$emit","postImg","utils","sourceCanvas","globalCompositeOperation","beginPath","fill","uploadFile","downloadPath","order_cropper","_vm","_h","$createElement","_c","_self","attrs","id","directives","rawName","expression","staticClass","alt","_v","on","click","is-link","nativeOn","$event","ref","staticStyle","display","accept","for","staticRenderFns","components_order_cropper","__webpack_require__","normalizeComponent","ssrContext","personmessage","imageTop","default_avatar_default","user","nickname","realName","phoneNum","email","birth","signature","showTextArea","signatureCopy","handleSubmitUser","headUrl","uploadImg","axiosApi","put","nickName","local","set","$vux","toast","text","textAreaContent","brower","onCancel","onConfirm","newHeaderImage","newImg","setItem","created","get","innerHeight","VHeader","v_header","Scroller","scroller","XInput","x_input","Calendar","calendar","XTextarea","x_textarea","XButton","x_button","Group","group","Datetime","datetime","Confirm","components_confirm","isIOS","isIphoneX","Flexbox","flexbox","FlexboxItem","flexbox_item","editmessage_personmessage","title","bounce","getHeader","placeholder","model","$$v","$set","slot","color","padding-left","span","_s","is-type","on-focus","plain","on-confirm","border","personmessage_Component","personmessage_normalizeComponent","__webpack_exports__"],"mappings":"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","file":"static/js/19.38f718698a982875c626.js","sourcesContent":["/*!\r\n * Cropper.js v1.3.2\r\n * https://github.com/fengyuanchen/cropperjs\r\n *\r\n * Copyright (c) 2015-2018 Chen Fengyuan\r\n * Released under the MIT license\r\n *\r\n * Date: 2018-03-03T03:43:36.276Z\r\n */\r\n\r\nvar WINDOW = typeof window !== 'undefined' ? window : {};\r\nvar NAMESPACE = 'cropper';\r\n\r\n// Actions\r\nvar ACTION_ALL = 'all';\r\nvar ACTION_CROP = 'crop';\r\nvar ACTION_MOVE = 'move';\r\nvar ACTION_ZOOM = 'zoom';\r\nvar ACTION_EAST = 'e';\r\nvar ACTION_WEST = 'w';\r\nvar ACTION_SOUTH = 's';\r\nvar ACTION_NORTH = 'n';\r\nvar ACTION_NORTH_EAST = 'ne';\r\nvar ACTION_NORTH_WEST = 'nw';\r\nvar ACTION_SOUTH_EAST = 'se';\r\nvar ACTION_SOUTH_WEST = 'sw';\r\n\r\n// Classes\r\nvar CLASS_CROP = NAMESPACE + '-crop';\r\nvar CLASS_DISABLED = NAMESPACE + '-disabled';\r\nvar CLASS_HIDDEN = NAMESPACE + '-hidden';\r\nvar CLASS_HIDE = NAMESPACE + '-hide';\r\nvar CLASS_INVISIBLE = NAMESPACE + '-invisible';\r\nvar CLASS_MODAL = NAMESPACE + '-modal';\r\nvar CLASS_MOVE = NAMESPACE + '-move';\r\n\r\n// Data keys\r\nvar DATA_ACTION = 'action';\r\nvar DATA_PREVIEW = 'preview';\r\n\r\n// Drag modes\r\nvar DRAG_MODE_CROP = 'crop';\r\nvar DRAG_MODE_MOVE = 'move';\r\nvar DRAG_MODE_NONE = 'none';\r\n\r\n// Events\r\nvar EVENT_CROP = 'crop';\r\nvar EVENT_CROP_END = 'cropend';\r\nvar EVENT_CROP_MOVE = 'cropmove';\r\nvar EVENT_CROP_START = 'cropstart';\r\nvar EVENT_DBLCLICK = 'dblclick';\r\nvar EVENT_LOAD = 'load';\r\nvar EVENT_POINTER_DOWN = WINDOW.PointerEvent ? 'pointerdown' : 'touchstart mousedown';\r\nvar EVENT_POINTER_MOVE = WINDOW.PointerEvent ? 'pointermove' : 'touchmove mousemove';\r\nvar EVENT_POINTER_UP = WINDOW.PointerEvent ? 'pointerup pointercancel' : 'touchend touchcancel mouseup';\r\nvar EVENT_READY = 'ready';\r\nvar EVENT_RESIZE = 'resize';\r\nvar EVENT_WHEEL = 'wheel mousewheel DOMMouseScroll';\r\nvar EVENT_ZOOM = 'zoom';\r\n\r\n// RegExps\r\nvar REGEXP_ACTIONS = /^(?:e|w|s|n|se|sw|ne|nw|all|crop|move|zoom)$/;\r\nvar REGEXP_DATA_URL = /^data:/;\r\nvar REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\r\nvar REGEXP_TAG_NAME = /^(?:img|canvas)$/i;\r\n\r\nvar DEFAULTS = {\r\n  // Define the view mode of the cropper\r\n  viewMode: 0, // 0, 1, 2, 3\r\n\r\n  // Define the dragging mode of the cropper\r\n  dragMode: DRAG_MODE_CROP, // 'crop', 'move' or 'none'\r\n\r\n  // Define the aspect ratio of the crop box\r\n  aspectRatio: NaN,\r\n\r\n  // An object with the previous cropping result data\r\n  data: null,\r\n\r\n  // A selector for adding extra containers to preview\r\n  preview: '',\r\n\r\n  // Re-render the cropper when resize the window\r\n  responsive: true,\r\n\r\n  // Restore the cropped area after resize the window\r\n  restore: true,\r\n\r\n  // Check if the current image is a cross-origin image\r\n  checkCrossOrigin: true,\r\n\r\n  // Check the current image's Exif Orientation information\r\n  checkOrientation: true,\r\n\r\n  // Show the black modal\r\n  modal: true,\r\n\r\n  // Show the dashed lines for guiding\r\n  guides: true,\r\n\r\n  // Show the center indicator for guiding\r\n  center: true,\r\n\r\n  // Show the white modal to highlight the crop box\r\n  highlight: true,\r\n\r\n  // Show the grid background\r\n  background: true,\r\n\r\n  // Enable to crop the image automatically when initialize\r\n  autoCrop: true,\r\n\r\n  // Define the percentage of automatic cropping area when initializes\r\n  autoCropArea: 0.8,\r\n\r\n  // Enable to move the image\r\n  movable: true,\r\n\r\n  // Enable to rotate the image\r\n  rotatable: true,\r\n\r\n  // Enable to scale the image\r\n  scalable: true,\r\n\r\n  // Enable to zoom the image\r\n  zoomable: true,\r\n\r\n  // Enable to zoom the image by dragging touch\r\n  zoomOnTouch: true,\r\n\r\n  // Enable to zoom the image by wheeling mouse\r\n  zoomOnWheel: true,\r\n\r\n  // Define zoom ratio when zoom the image by wheeling mouse\r\n  wheelZoomRatio: 0.1,\r\n\r\n  // Enable to move the crop box\r\n  cropBoxMovable: true,\r\n\r\n  // Enable to resize the crop box\r\n  cropBoxResizable: true,\r\n\r\n  // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\r\n  toggleDragModeOnDblclick: true,\r\n\r\n  // Size limitation\r\n  minCanvasWidth: 0,\r\n  minCanvasHeight: 0,\r\n  minCropBoxWidth: 0,\r\n  minCropBoxHeight: 0,\r\n  minContainerWidth: 200,\r\n  minContainerHeight: 100,\r\n\r\n  // Shortcuts of events\r\n  ready: null,\r\n  cropstart: null,\r\n  cropmove: null,\r\n  cropend: null,\r\n  crop: null,\r\n  zoom: null\r\n};\r\n\r\nvar TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-action=\"se\"></span>' + '</div>' + '</div>';\r\n\r\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\r\n  return typeof obj;\r\n} : function (obj) {\r\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\r\n};\r\n\r\nvar classCallCheck = function (instance, Constructor) {\r\n  if (!(instance instanceof Constructor)) {\r\n    throw new TypeError(\"Cannot call a class as a function\");\r\n  }\r\n};\r\n\r\nvar createClass = function () {\r\n  function defineProperties(target, props) {\r\n    for (var i = 0; i < props.length; i++) {\r\n      var descriptor = props[i];\r\n      descriptor.enumerable = descriptor.enumerable || false;\r\n      descriptor.configurable = true;\r\n      if (\"value\" in descriptor) descriptor.writable = true;\r\n      Object.defineProperty(target, descriptor.key, descriptor);\r\n    }\r\n  }\r\n\r\n  return function (Constructor, protoProps, staticProps) {\r\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\r\n    if (staticProps) defineProperties(Constructor, staticProps);\r\n    return Constructor;\r\n  };\r\n}();\r\n\r\nvar toConsumableArray = function (arr) {\r\n  if (Array.isArray(arr)) {\r\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\r\n\r\n    return arr2;\r\n  } else {\r\n    return Array.from(arr);\r\n  }\r\n};\r\n\r\n/**\r\n * Check if the given value is not a number.\r\n */\r\nvar isNaN = Number.isNaN || WINDOW.isNaN;\r\n\r\n/**\r\n * Check if the given value is a number.\r\n * @param {*} value - The value to check.\r\n * @returns {boolean} Returns `true` if the given value is a number, else `false`.\r\n */\r\nfunction isNumber(value) {\r\n  return typeof value === 'number' && !isNaN(value);\r\n}\r\n\r\n/**\r\n * Check if the given value is undefined.\r\n * @param {*} value - The value to check.\r\n * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\r\n */\r\nfunction isUndefined(value) {\r\n  return typeof value === 'undefined';\r\n}\r\n\r\n/**\r\n * Check if the given value is an object.\r\n * @param {*} value - The value to check.\r\n * @returns {boolean} Returns `true` if the given value is an object, else `false`.\r\n */\r\nfunction isObject(value) {\r\n  return (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value !== null;\r\n}\r\n\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n/**\r\n * Check if the given value is a plain object.\r\n * @param {*} value - The value to check.\r\n * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\r\n */\r\n\r\nfunction isPlainObject(value) {\r\n  if (!isObject(value)) {\r\n    return false;\r\n  }\r\n\r\n  try {\r\n    var _constructor = value.constructor;\r\n    var prototype = _constructor.prototype;\r\n\r\n\r\n    return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Check if the given value is a function.\r\n * @param {*} value - The value to check.\r\n * @returns {boolean} Returns `true` if the given value is a function, else `false`.\r\n */\r\nfunction isFunction(value) {\r\n  return typeof value === 'function';\r\n}\r\n\r\n/**\r\n * Iterate the given data.\r\n * @param {*} data - The data to iterate.\r\n * @param {Function} callback - The process function for each element.\r\n * @returns {*} The original data.\r\n */\r\nfunction forEach(data, callback) {\r\n  if (data && isFunction(callback)) {\r\n    if (Array.isArray(data) || isNumber(data.length) /* array-like */) {\r\n        var length = data.length;\r\n\r\n        var i = void 0;\r\n\r\n        for (i = 0; i < length; i += 1) {\r\n          if (callback.call(data, data[i], i, data) === false) {\r\n            break;\r\n          }\r\n        }\r\n      } else if (isObject(data)) {\r\n      Object.keys(data).forEach(function (key) {\r\n        callback.call(data, data[key], key, data);\r\n      });\r\n    }\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\n/**\r\n * Extend the given object.\r\n * @param {*} obj - The object to be extended.\r\n * @param {*} args - The rest objects which will be merged to the first object.\r\n * @returns {Object} The extended object.\r\n */\r\nvar assign = Object.assign || function assign(obj) {\r\n  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n    args[_key - 1] = arguments[_key];\r\n  }\r\n\r\n  if (isObject(obj) && args.length > 0) {\r\n    args.forEach(function (arg) {\r\n      if (isObject(arg)) {\r\n        Object.keys(arg).forEach(function (key) {\r\n          obj[key] = arg[key];\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  return obj;\r\n};\r\n\r\nvar REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/i;\r\n\r\n/**\r\n * Normalize decimal number.\r\n * Check out {@link http://0.30000000000000004.com/ }\r\n * @param {number} value - The value to normalize.\r\n * @param {number} [times=100000000000] - The times for normalizing.\r\n * @returns {number} Returns the normalized number.\r\n */\r\nfunction normalizeDecimalNumber(value) {\r\n  var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\r\n\r\n  return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\r\n}\r\n\r\nvar REGEXP_SUFFIX = /^(?:width|height|left|top|marginLeft|marginTop)$/;\r\n\r\n/**\r\n * Apply styles to the given element.\r\n * @param {Element} element - The target element.\r\n * @param {Object} styles - The styles for applying.\r\n */\r\nfunction setStyle(element, styles) {\r\n  var style = element.style;\r\n\r\n\r\n  forEach(styles, function (value, property) {\r\n    if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\r\n      value += 'px';\r\n    }\r\n\r\n    style[property] = value;\r\n  });\r\n}\r\n\r\n/**\r\n * Check if the given element has a special class.\r\n * @param {Element} element - The element to check.\r\n * @param {string} value - The class to search.\r\n * @returns {boolean} Returns `true` if the special class was found.\r\n */\r\nfunction hasClass(element, value) {\r\n  return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\r\n}\r\n\r\n/**\r\n * Add classes to the given element.\r\n * @param {Element} element - The target element.\r\n * @param {string} value - The classes to be added.\r\n */\r\nfunction addClass(element, value) {\r\n  if (!value) {\r\n    return;\r\n  }\r\n\r\n  if (isNumber(element.length)) {\r\n    forEach(element, function (elem) {\r\n      addClass(elem, value);\r\n    });\r\n    return;\r\n  }\r\n\r\n  if (element.classList) {\r\n    element.classList.add(value);\r\n    return;\r\n  }\r\n\r\n  var className = element.className.trim();\r\n\r\n  if (!className) {\r\n    element.className = value;\r\n  } else if (className.indexOf(value) < 0) {\r\n    element.className = className + ' ' + value;\r\n  }\r\n}\r\n\r\n/**\r\n * Remove classes from the given element.\r\n * @param {Element} element - The target element.\r\n * @param {string} value - The classes to be removed.\r\n */\r\nfunction removeClass(element, value) {\r\n  if (!value) {\r\n    return;\r\n  }\r\n\r\n  if (isNumber(element.length)) {\r\n    forEach(element, function (elem) {\r\n      removeClass(elem, value);\r\n    });\r\n    return;\r\n  }\r\n\r\n  if (element.classList) {\r\n    element.classList.remove(value);\r\n    return;\r\n  }\r\n\r\n  if (element.className.indexOf(value) >= 0) {\r\n    element.className = element.className.replace(value, '');\r\n  }\r\n}\r\n\r\n/**\r\n * Add or remove classes from the given element.\r\n * @param {Element} element - The target element.\r\n * @param {string} value - The classes to be toggled.\r\n * @param {boolean} added - Add only.\r\n */\r\nfunction toggleClass(element, value, added) {\r\n  if (!value) {\r\n    return;\r\n  }\r\n\r\n  if (isNumber(element.length)) {\r\n    forEach(element, function (elem) {\r\n      toggleClass(elem, value, added);\r\n    });\r\n    return;\r\n  }\r\n\r\n  // IE10-11 doesn't support the second parameter of `classList.toggle`\r\n  if (added) {\r\n    addClass(element, value);\r\n  } else {\r\n    removeClass(element, value);\r\n  }\r\n}\r\n\r\nvar REGEXP_HYPHENATE = /([a-z\\d])([A-Z])/g;\r\n\r\n/**\r\n * Transform the given string from camelCase to kebab-case\r\n * @param {string} value - The value to transform.\r\n * @returns {string} The transformed value.\r\n */\r\nfunction hyphenate(value) {\r\n  return value.replace(REGEXP_HYPHENATE, '$1-$2').toLowerCase();\r\n}\r\n\r\n/**\r\n * Get data from the given element.\r\n * @param {Element} element - The target element.\r\n * @param {string} name - The data key to get.\r\n * @returns {string} The data value.\r\n */\r\nfunction getData(element, name) {\r\n  if (isObject(element[name])) {\r\n    return element[name];\r\n  } else if (element.dataset) {\r\n    return element.dataset[name];\r\n  }\r\n\r\n  return element.getAttribute('data-' + hyphenate(name));\r\n}\r\n\r\n/**\r\n * Set data to the given element.\r\n * @param {Element} element - The target element.\r\n * @param {string} name - The data key to set.\r\n * @param {string} data - The data value.\r\n */\r\nfunction setData(element, name, data) {\r\n  if (isObject(data)) {\r\n    element[name] = data;\r\n  } else if (element.dataset) {\r\n    element.dataset[name] = data;\r\n  } else {\r\n    element.setAttribute('data-' + hyphenate(name), data);\r\n  }\r\n}\r\n\r\n/**\r\n * Remove data from the given element.\r\n * @param {Element} element - The target element.\r\n * @param {string} name - The data key to remove.\r\n */\r\nfunction removeData(element, name) {\r\n  if (isObject(element[name])) {\r\n    try {\r\n      delete element[name];\r\n    } catch (e) {\r\n      element[name] = undefined;\r\n    }\r\n  } else if (element.dataset) {\r\n    // #128 Safari not allows to delete dataset property\r\n    try {\r\n      delete element.dataset[name];\r\n    } catch (e) {\r\n      element.dataset[name] = undefined;\r\n    }\r\n  } else {\r\n    element.removeAttribute('data-' + hyphenate(name));\r\n  }\r\n}\r\n\r\nvar REGEXP_SPACES = /\\s\\s*/;\r\n\r\n/**\r\n * Remove event listener from the target element.\r\n * @param {Element} element - The event target.\r\n * @param {string} type - The event type(s).\r\n * @param {Function} listener - The event listener.\r\n * @param {Object} options - The event options.\r\n */\r\nfunction removeListener(element, type, listener) {\r\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\r\n\r\n  forEach(type.trim().split(REGEXP_SPACES), function (t) {\r\n    element.removeEventListener(t, listener, options);\r\n  });\r\n}\r\n\r\n/**\r\n * Add event listener to the target element.\r\n * @param {Element} element - The event target.\r\n * @param {string} type - The event type(s).\r\n * @param {Function} listener - The event listener.\r\n * @param {Object} options - The event options.\r\n */\r\nfunction addListener(element, type, _listener) {\r\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\r\n\r\n  if (options.once) {\r\n    var originalListener = _listener;\r\n\r\n    _listener = function listener() {\r\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\r\n        args[_key2] = arguments[_key2];\r\n      }\r\n\r\n      removeListener(element, type, _listener, options);\r\n      return originalListener.apply(element, args);\r\n    };\r\n  }\r\n\r\n  forEach(type.trim().split(REGEXP_SPACES), function (t) {\r\n    element.addEventListener(t, _listener, options);\r\n  });\r\n}\r\n\r\n/**\r\n * Dispatch event on the target element.\r\n * @param {Element} element - The event target.\r\n * @param {string} type - The event type(s).\r\n * @param {Object} data - The additional event data.\r\n * @returns {boolean} Indicate if the event is default prevented or not.\r\n */\r\nfunction dispatchEvent(element, type, data) {\r\n  var event = void 0;\r\n\r\n  // Event and CustomEvent on IE9-11 are global objects, not constructors\r\n  if (isFunction(Event) && isFunction(CustomEvent)) {\r\n    event = new CustomEvent(type, {\r\n      detail: data,\r\n      bubbles: true,\r\n      cancelable: true\r\n    });\r\n  } else {\r\n    event = document.createEvent('CustomEvent');\r\n    event.initCustomEvent(type, true, true, data);\r\n  }\r\n\r\n  return element.dispatchEvent(event);\r\n}\r\n\r\n/**\r\n * Get the offset base on the document.\r\n * @param {Element} element - The target element.\r\n * @returns {Object} The offset data.\r\n */\r\nfunction getOffset(element) {\r\n  var box = element.getBoundingClientRect();\r\n\r\n  return {\r\n    left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\r\n    top: box.top + (window.pageYOffset - document.documentElement.clientTop)\r\n  };\r\n}\r\n\r\nvar location = WINDOW.location;\r\n\r\nvar REGEXP_ORIGINS = /^(https?:)\\/\\/([^:/?#]+):?(\\d*)/i;\r\n\r\n/**\r\n * Check if the given URL is a cross origin URL.\r\n * @param {string} url - The target URL.\r\n * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\r\n */\r\nfunction isCrossOriginURL(url) {\r\n  var parts = url.match(REGEXP_ORIGINS);\r\n\r\n  return parts && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\r\n}\r\n\r\n/**\r\n * Add timestamp to the given URL.\r\n * @param {string} url - The target URL.\r\n * @returns {string} The result URL.\r\n */\r\nfunction addTimestamp(url) {\r\n  var timestamp = 'timestamp=' + new Date().getTime();\r\n\r\n  return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\r\n}\r\n\r\n/**\r\n * Get transforms base on the given object.\r\n * @param {Object} obj - The target object.\r\n * @returns {string} A string contains transform values.\r\n */\r\nfunction getTransforms(_ref) {\r\n  var rotate = _ref.rotate,\r\n      scaleX = _ref.scaleX,\r\n      scaleY = _ref.scaleY,\r\n      translateX = _ref.translateX,\r\n      translateY = _ref.translateY;\r\n\r\n  var values = [];\r\n\r\n  if (isNumber(translateX) && translateX !== 0) {\r\n    values.push('translateX(' + translateX + 'px)');\r\n  }\r\n\r\n  if (isNumber(translateY) && translateY !== 0) {\r\n    values.push('translateY(' + translateY + 'px)');\r\n  }\r\n\r\n  // Rotate should come first before scale to match orientation transform\r\n  if (isNumber(rotate) && rotate !== 0) {\r\n    values.push('rotate(' + rotate + 'deg)');\r\n  }\r\n\r\n  if (isNumber(scaleX) && scaleX !== 1) {\r\n    values.push('scaleX(' + scaleX + ')');\r\n  }\r\n\r\n  if (isNumber(scaleY) && scaleY !== 1) {\r\n    values.push('scaleY(' + scaleY + ')');\r\n  }\r\n\r\n  var transform = values.length ? values.join(' ') : 'none';\r\n\r\n  return {\r\n    WebkitTransform: transform,\r\n    msTransform: transform,\r\n    transform: transform\r\n  };\r\n}\r\n\r\n/**\r\n * Get the max ratio of a group of pointers.\r\n * @param {string} pointers - The target pointers.\r\n * @returns {number} The result ratio.\r\n */\r\nfunction getMaxZoomRatio(pointers) {\r\n  var pointers2 = assign({}, pointers);\r\n  var ratios = [];\r\n\r\n  forEach(pointers, function (pointer, pointerId) {\r\n    delete pointers2[pointerId];\r\n\r\n    forEach(pointers2, function (pointer2) {\r\n      var x1 = Math.abs(pointer.startX - pointer2.startX);\r\n      var y1 = Math.abs(pointer.startY - pointer2.startY);\r\n      var x2 = Math.abs(pointer.endX - pointer2.endX);\r\n      var y2 = Math.abs(pointer.endY - pointer2.endY);\r\n      var z1 = Math.sqrt(x1 * x1 + y1 * y1);\r\n      var z2 = Math.sqrt(x2 * x2 + y2 * y2);\r\n      var ratio = (z2 - z1) / z1;\r\n\r\n      ratios.push(ratio);\r\n    });\r\n  });\r\n\r\n  ratios.sort(function (a, b) {\r\n    return Math.abs(a) < Math.abs(b);\r\n  });\r\n\r\n  return ratios[0];\r\n}\r\n\r\n/**\r\n * Get a pointer from an event object.\r\n * @param {Object} event - The target event object.\r\n * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\r\n * @returns {Object} The result pointer contains start and/or end point coordinates.\r\n */\r\nfunction getPointer(_ref2, endOnly) {\r\n  var pageX = _ref2.pageX,\r\n      pageY = _ref2.pageY;\r\n\r\n  var end = {\r\n    endX: pageX,\r\n    endY: pageY\r\n  };\r\n\r\n  return endOnly ? end : assign({\r\n    startX: pageX,\r\n    startY: pageY\r\n  }, end);\r\n}\r\n\r\n/**\r\n * Get the center point coordinate of a group of pointers.\r\n * @param {Object} pointers - The target pointers.\r\n * @returns {Object} The center point coordinate.\r\n */\r\nfunction getPointersCenter(pointers) {\r\n  var pageX = 0;\r\n  var pageY = 0;\r\n  var count = 0;\r\n\r\n  forEach(pointers, function (_ref3) {\r\n    var startX = _ref3.startX,\r\n        startY = _ref3.startY;\r\n\r\n    pageX += startX;\r\n    pageY += startY;\r\n    count += 1;\r\n  });\r\n\r\n  pageX /= count;\r\n  pageY /= count;\r\n\r\n  return {\r\n    pageX: pageX,\r\n    pageY: pageY\r\n  };\r\n}\r\n\r\n/**\r\n * Check if the given value is a finite number.\r\n */\r\nvar isFinite = Number.isFinite || WINDOW.isFinite;\r\n\r\n/**\r\n * Get the max sizes in a rectangle under the given aspect ratio.\r\n * @param {Object} data - The original sizes.\r\n * @param {string} [type='contain'] - The adjust type.\r\n * @returns {Object} The result sizes.\r\n */\r\nfunction getAdjustedSizes(_ref4) // or 'cover'\r\n{\r\n  var aspectRatio = _ref4.aspectRatio,\r\n      height = _ref4.height,\r\n      width = _ref4.width;\r\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\r\n\r\n  var isValidNumber = function isValidNumber(value) {\r\n    return isFinite(value) && value > 0;\r\n  };\r\n\r\n  if (isValidNumber(width) && isValidNumber(height)) {\r\n    var adjustedWidth = height * aspectRatio;\r\n\r\n    if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\r\n      height = width / aspectRatio;\r\n    } else {\r\n      width = height * aspectRatio;\r\n    }\r\n  } else if (isValidNumber(width)) {\r\n    height = width / aspectRatio;\r\n  } else if (isValidNumber(height)) {\r\n    width = height * aspectRatio;\r\n  }\r\n\r\n  return {\r\n    width: width,\r\n    height: height\r\n  };\r\n}\r\n\r\n/**\r\n * Get the new sizes of a rectangle after rotated.\r\n * @param {Object} data - The original sizes.\r\n * @returns {Object} The result sizes.\r\n */\r\nfunction getRotatedSizes(_ref5) {\r\n  var width = _ref5.width,\r\n      height = _ref5.height,\r\n      degree = _ref5.degree;\r\n\r\n  degree = Math.abs(degree) % 180;\r\n\r\n  if (degree === 90) {\r\n    return {\r\n      width: height,\r\n      height: width\r\n    };\r\n  }\r\n\r\n  var arc = degree % 90 * Math.PI / 180;\r\n  var sinArc = Math.sin(arc);\r\n  var cosArc = Math.cos(arc);\r\n  var newWidth = width * cosArc + height * sinArc;\r\n  var newHeight = width * sinArc + height * cosArc;\r\n\r\n  return degree > 90 ? {\r\n    width: newHeight,\r\n    height: newWidth\r\n  } : {\r\n    width: newWidth,\r\n    height: newHeight\r\n  };\r\n}\r\n\r\n/**\r\n * Get a canvas which drew the given image.\r\n * @param {HTMLImageElement} image - The image for drawing.\r\n * @param {Object} imageData - The image data.\r\n * @param {Object} canvasData - The canvas data.\r\n * @param {Object} options - The options.\r\n * @returns {HTMLCanvasElement} The result canvas.\r\n */\r\nfunction getSourceCanvas(image, _ref6, _ref7, _ref8) {\r\n  var imageNaturalWidth = _ref6.naturalWidth,\r\n      imageNaturalHeight = _ref6.naturalHeight,\r\n      _ref6$rotate = _ref6.rotate,\r\n      rotate = _ref6$rotate === undefined ? 0 : _ref6$rotate,\r\n      _ref6$scaleX = _ref6.scaleX,\r\n      scaleX = _ref6$scaleX === undefined ? 1 : _ref6$scaleX,\r\n      _ref6$scaleY = _ref6.scaleY,\r\n      scaleY = _ref6$scaleY === undefined ? 1 : _ref6$scaleY;\r\n  var aspectRatio = _ref7.aspectRatio,\r\n      naturalWidth = _ref7.naturalWidth,\r\n      naturalHeight = _ref7.naturalHeight;\r\n  var _ref8$fillColor = _ref8.fillColor,\r\n      fillColor = _ref8$fillColor === undefined ? 'transparent' : _ref8$fillColor,\r\n      _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\r\n      imageSmoothingEnabled = _ref8$imageSmoothingE === undefined ? true : _ref8$imageSmoothingE,\r\n      _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\r\n      imageSmoothingQuality = _ref8$imageSmoothingQ === undefined ? 'low' : _ref8$imageSmoothingQ,\r\n      _ref8$maxWidth = _ref8.maxWidth,\r\n      maxWidth = _ref8$maxWidth === undefined ? Infinity : _ref8$maxWidth,\r\n      _ref8$maxHeight = _ref8.maxHeight,\r\n      maxHeight = _ref8$maxHeight === undefined ? Infinity : _ref8$maxHeight,\r\n      _ref8$minWidth = _ref8.minWidth,\r\n      minWidth = _ref8$minWidth === undefined ? 0 : _ref8$minWidth,\r\n      _ref8$minHeight = _ref8.minHeight,\r\n      minHeight = _ref8$minHeight === undefined ? 0 : _ref8$minHeight;\r\n\r\n  var canvas = document.createElement('canvas');\r\n  var context = canvas.getContext('2d');\r\n  var maxSizes = getAdjustedSizes({\r\n    aspectRatio: aspectRatio,\r\n    width: maxWidth,\r\n    height: maxHeight\r\n  });\r\n  var minSizes = getAdjustedSizes({\r\n    aspectRatio: aspectRatio,\r\n    width: minWidth,\r\n    height: minHeight\r\n  }, 'cover');\r\n  var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\r\n  var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight));\r\n\r\n  // Note: should always use image's natural sizes for drawing as\r\n  // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\r\n  var destWidth = Math.min(maxSizes.width, Math.max(minSizes.width, imageNaturalWidth));\r\n  var destHeight = Math.min(maxSizes.height, Math.max(minSizes.height, imageNaturalHeight));\r\n  var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\r\n\r\n  canvas.width = normalizeDecimalNumber(width);\r\n  canvas.height = normalizeDecimalNumber(height);\r\n  context.fillStyle = fillColor;\r\n  context.fillRect(0, 0, width, height);\r\n  context.save();\r\n  context.translate(width / 2, height / 2);\r\n  context.rotate(rotate * Math.PI / 180);\r\n  context.scale(scaleX, scaleY);\r\n  context.imageSmoothingEnabled = imageSmoothingEnabled;\r\n  context.imageSmoothingQuality = imageSmoothingQuality;\r\n  context.drawImage.apply(context, [image].concat(toConsumableArray(params.map(function (param) {\r\n    return Math.floor(normalizeDecimalNumber(param));\r\n  }))));\r\n  context.restore();\r\n  return canvas;\r\n}\r\n\r\nvar fromCharCode = String.fromCharCode;\r\n\r\n/**\r\n * Get string from char code in data view.\r\n * @param {DataView} dataView - The data view for read.\r\n * @param {number} start - The start index.\r\n * @param {number} length - The read length.\r\n * @returns {string} The read result.\r\n */\r\n\r\nfunction getStringFromCharCode(dataView, start, length) {\r\n  var str = '';\r\n  var i = void 0;\r\n\r\n  length += start;\r\n\r\n  for (i = start; i < length; i += 1) {\r\n    str += fromCharCode(dataView.getUint8(i));\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nvar REGEXP_DATA_URL_HEAD = /^data:.*,/;\r\n\r\n/**\r\n * Transform Data URL to array buffer.\r\n * @param {string} dataURL - The Data URL to transform.\r\n * @returns {ArrayBuffer} The result array buffer.\r\n */\r\nfunction dataURLToArrayBuffer(dataURL) {\r\n  var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\r\n  var binary = atob(base64);\r\n  var arrayBuffer = new ArrayBuffer(binary.length);\r\n  var uint8 = new Uint8Array(arrayBuffer);\r\n\r\n  forEach(uint8, function (value, i) {\r\n    uint8[i] = binary.charCodeAt(i);\r\n  });\r\n\r\n  return arrayBuffer;\r\n}\r\n\r\n/**\r\n * Transform array buffer to Data URL.\r\n * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\r\n * @param {string} mimeType - The mime type of the Data URL.\r\n * @returns {string} The result Data URL.\r\n */\r\nfunction arrayBufferToDataURL(arrayBuffer, mimeType) {\r\n  var uint8 = new Uint8Array(arrayBuffer);\r\n  var data = '';\r\n\r\n  // TypedArray.prototype.forEach is not supported in some browsers.\r\n  forEach(uint8, function (value) {\r\n    data += fromCharCode(value);\r\n  });\r\n\r\n  return 'data:' + mimeType + ';base64,' + btoa(data);\r\n}\r\n\r\n/**\r\n * Get orientation value from given array buffer.\r\n * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\r\n * @returns {number} The read orientation value.\r\n */\r\nfunction getOrientation(arrayBuffer) {\r\n  var dataView = new DataView(arrayBuffer);\r\n  var orientation = void 0;\r\n  var littleEndian = void 0;\r\n  var app1Start = void 0;\r\n  var ifdStart = void 0;\r\n\r\n  // Only handle JPEG image (start by 0xFFD8)\r\n  if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\r\n    var length = dataView.byteLength;\r\n    var offset = 2;\r\n\r\n    while (offset < length) {\r\n      if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\r\n        app1Start = offset;\r\n        break;\r\n      }\r\n\r\n      offset += 1;\r\n    }\r\n  }\r\n\r\n  if (app1Start) {\r\n    var exifIDCode = app1Start + 4;\r\n    var tiffOffset = app1Start + 10;\r\n\r\n    if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\r\n      var endianness = dataView.getUint16(tiffOffset);\r\n\r\n      littleEndian = endianness === 0x4949;\r\n\r\n      if (littleEndian || endianness === 0x4D4D /* bigEndian */) {\r\n          if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\r\n            var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\r\n\r\n            if (firstIFDOffset >= 0x00000008) {\r\n              ifdStart = tiffOffset + firstIFDOffset;\r\n            }\r\n          }\r\n        }\r\n    }\r\n  }\r\n\r\n  if (ifdStart) {\r\n    var _length = dataView.getUint16(ifdStart, littleEndian);\r\n    var _offset = void 0;\r\n    var i = void 0;\r\n\r\n    for (i = 0; i < _length; i += 1) {\r\n      _offset = ifdStart + i * 12 + 2;\r\n\r\n      if (dataView.getUint16(_offset, littleEndian) === 0x0112 /* Orientation */) {\r\n          // 8 is the offset of the current tag's value\r\n          _offset += 8;\r\n\r\n          // Get the original orientation value\r\n          orientation = dataView.getUint16(_offset, littleEndian);\r\n\r\n          // Override the orientation with its default value\r\n          dataView.setUint16(_offset, 1, littleEndian);\r\n          break;\r\n        }\r\n    }\r\n  }\r\n\r\n  return orientation;\r\n}\r\n\r\n/**\r\n * Parse Exif Orientation value.\r\n * @param {number} orientation - The orientation to parse.\r\n * @returns {Object} The parsed result.\r\n */\r\nfunction parseOrientation(orientation) {\r\n  var rotate = 0;\r\n  var scaleX = 1;\r\n  var scaleY = 1;\r\n\r\n  switch (orientation) {\r\n    // Flip horizontal\r\n    case 2:\r\n      scaleX = -1;\r\n      break;\r\n\r\n    // Rotate left 180°\r\n    case 3:\r\n      rotate = -180;\r\n      break;\r\n\r\n    // Flip vertical\r\n    case 4:\r\n      scaleY = -1;\r\n      break;\r\n\r\n    // Flip vertical and rotate right 90°\r\n    case 5:\r\n      rotate = 90;\r\n      scaleY = -1;\r\n      break;\r\n\r\n    // Rotate right 90°\r\n    case 6:\r\n      rotate = 90;\r\n      break;\r\n\r\n    // Flip horizontal and rotate right 90°\r\n    case 7:\r\n      rotate = 90;\r\n      scaleX = -1;\r\n      break;\r\n\r\n    // Rotate left 90°\r\n    case 8:\r\n      rotate = -90;\r\n      break;\r\n\r\n    default:\r\n  }\r\n\r\n  return {\r\n    rotate: rotate,\r\n    scaleX: scaleX,\r\n    scaleY: scaleY\r\n  };\r\n}\r\n\r\nvar render = {\r\n  render: function render() {\r\n    this.initContainer();\r\n    this.initCanvas();\r\n    this.initCropBox();\r\n    this.renderCanvas();\r\n\r\n    if (this.cropped) {\r\n      this.renderCropBox();\r\n    }\r\n  },\r\n  initContainer: function initContainer() {\r\n    var element = this.element,\r\n        options = this.options,\r\n        container = this.container,\r\n        cropper = this.cropper;\r\n\r\n\r\n    addClass(cropper, CLASS_HIDDEN);\r\n    removeClass(element, CLASS_HIDDEN);\r\n\r\n    var containerData = {\r\n      width: Math.max(container.offsetWidth, Number(options.minContainerWidth) || 200),\r\n      height: Math.max(container.offsetHeight, Number(options.minContainerHeight) || 100)\r\n    };\r\n\r\n    this.containerData = containerData;\r\n\r\n    setStyle(cropper, {\r\n      width: containerData.width,\r\n      height: containerData.height\r\n    });\r\n\r\n    addClass(element, CLASS_HIDDEN);\r\n    removeClass(cropper, CLASS_HIDDEN);\r\n  },\r\n\r\n\r\n  // Canvas (image wrapper)\r\n  initCanvas: function initCanvas() {\r\n    var containerData = this.containerData,\r\n        imageData = this.imageData;\r\n    var viewMode = this.options.viewMode;\r\n\r\n    var rotated = Math.abs(imageData.rotate) % 180 === 90;\r\n    var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\r\n    var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\r\n    var aspectRatio = naturalWidth / naturalHeight;\r\n    var canvasWidth = containerData.width;\r\n    var canvasHeight = containerData.height;\r\n\r\n    if (containerData.height * aspectRatio > containerData.width) {\r\n      if (viewMode === 3) {\r\n        canvasWidth = containerData.height * aspectRatio;\r\n      } else {\r\n        canvasHeight = containerData.width / aspectRatio;\r\n      }\r\n    } else if (viewMode === 3) {\r\n      canvasHeight = containerData.width / aspectRatio;\r\n    } else {\r\n      canvasWidth = containerData.height * aspectRatio;\r\n    }\r\n\r\n    var canvasData = {\r\n      aspectRatio: aspectRatio,\r\n      naturalWidth: naturalWidth,\r\n      naturalHeight: naturalHeight,\r\n      width: canvasWidth,\r\n      height: canvasHeight\r\n    };\r\n\r\n    canvasData.left = (containerData.width - canvasWidth) / 2;\r\n    canvasData.top = (containerData.height - canvasHeight) / 2;\r\n    canvasData.oldLeft = canvasData.left;\r\n    canvasData.oldTop = canvasData.top;\r\n\r\n    this.canvasData = canvasData;\r\n    this.limited = viewMode === 1 || viewMode === 2;\r\n    this.limitCanvas(true, true);\r\n    this.initialImageData = assign({}, imageData);\r\n    this.initialCanvasData = assign({}, canvasData);\r\n  },\r\n  limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\r\n    var options = this.options,\r\n        containerData = this.containerData,\r\n        canvasData = this.canvasData,\r\n        cropBoxData = this.cropBoxData;\r\n    var viewMode = options.viewMode;\r\n    var aspectRatio = canvasData.aspectRatio;\r\n\r\n    var cropped = this.cropped && cropBoxData;\r\n\r\n    if (sizeLimited) {\r\n      var minCanvasWidth = Number(options.minCanvasWidth) || 0;\r\n      var minCanvasHeight = Number(options.minCanvasHeight) || 0;\r\n\r\n      if (viewMode > 1) {\r\n        minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\r\n        minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\r\n\r\n        if (viewMode === 3) {\r\n          if (minCanvasHeight * aspectRatio > minCanvasWidth) {\r\n            minCanvasWidth = minCanvasHeight * aspectRatio;\r\n          } else {\r\n            minCanvasHeight = minCanvasWidth / aspectRatio;\r\n          }\r\n        }\r\n      } else if (viewMode > 0) {\r\n        if (minCanvasWidth) {\r\n          minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\r\n        } else if (minCanvasHeight) {\r\n          minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\r\n        } else if (cropped) {\r\n          minCanvasWidth = cropBoxData.width;\r\n          minCanvasHeight = cropBoxData.height;\r\n\r\n          if (minCanvasHeight * aspectRatio > minCanvasWidth) {\r\n            minCanvasWidth = minCanvasHeight * aspectRatio;\r\n          } else {\r\n            minCanvasHeight = minCanvasWidth / aspectRatio;\r\n          }\r\n        }\r\n      }\r\n\r\n      var _getAdjustedSizes = getAdjustedSizes({\r\n        aspectRatio: aspectRatio,\r\n        width: minCanvasWidth,\r\n        height: minCanvasHeight\r\n      });\r\n\r\n      minCanvasWidth = _getAdjustedSizes.width;\r\n      minCanvasHeight = _getAdjustedSizes.height;\r\n\r\n\r\n      canvasData.minWidth = minCanvasWidth;\r\n      canvasData.minHeight = minCanvasHeight;\r\n      canvasData.maxWidth = Infinity;\r\n      canvasData.maxHeight = Infinity;\r\n    }\r\n\r\n    if (positionLimited) {\r\n      if (viewMode) {\r\n        var newCanvasLeft = containerData.width - canvasData.width;\r\n        var newCanvasTop = containerData.height - canvasData.height;\r\n\r\n        canvasData.minLeft = Math.min(0, newCanvasLeft);\r\n        canvasData.minTop = Math.min(0, newCanvasTop);\r\n        canvasData.maxLeft = Math.max(0, newCanvasLeft);\r\n        canvasData.maxTop = Math.max(0, newCanvasTop);\r\n\r\n        if (cropped && this.limited) {\r\n          canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\r\n          canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\r\n          canvasData.maxLeft = cropBoxData.left;\r\n          canvasData.maxTop = cropBoxData.top;\r\n\r\n          if (viewMode === 2) {\r\n            if (canvasData.width >= containerData.width) {\r\n              canvasData.minLeft = Math.min(0, newCanvasLeft);\r\n              canvasData.maxLeft = Math.max(0, newCanvasLeft);\r\n            }\r\n\r\n            if (canvasData.height >= containerData.height) {\r\n              canvasData.minTop = Math.min(0, newCanvasTop);\r\n              canvasData.maxTop = Math.max(0, newCanvasTop);\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        canvasData.minLeft = -canvasData.width;\r\n        canvasData.minTop = -canvasData.height;\r\n        canvasData.maxLeft = containerData.width;\r\n        canvasData.maxTop = containerData.height;\r\n      }\r\n    }\r\n  },\r\n  renderCanvas: function renderCanvas(changed, transformed) {\r\n    var canvasData = this.canvasData,\r\n        imageData = this.imageData;\r\n\r\n\r\n    if (transformed) {\r\n      var _getRotatedSizes = getRotatedSizes({\r\n        width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\r\n        height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\r\n        degree: imageData.rotate || 0\r\n      }),\r\n          naturalWidth = _getRotatedSizes.width,\r\n          naturalHeight = _getRotatedSizes.height;\r\n\r\n      var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\r\n      var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\r\n\r\n      canvasData.left -= (width - canvasData.width) / 2;\r\n      canvasData.top -= (height - canvasData.height) / 2;\r\n      canvasData.width = width;\r\n      canvasData.height = height;\r\n      canvasData.aspectRatio = naturalWidth / naturalHeight;\r\n      canvasData.naturalWidth = naturalWidth;\r\n      canvasData.naturalHeight = naturalHeight;\r\n      this.limitCanvas(true, false);\r\n    }\r\n\r\n    if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\r\n      canvasData.left = canvasData.oldLeft;\r\n    }\r\n\r\n    if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\r\n      canvasData.top = canvasData.oldTop;\r\n    }\r\n\r\n    canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\r\n    canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\r\n\r\n    this.limitCanvas(false, true);\r\n\r\n    canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\r\n    canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\r\n    canvasData.oldLeft = canvasData.left;\r\n    canvasData.oldTop = canvasData.top;\r\n\r\n    setStyle(this.canvas, assign({\r\n      width: canvasData.width,\r\n      height: canvasData.height\r\n    }, getTransforms({\r\n      translateX: canvasData.left,\r\n      translateY: canvasData.top\r\n    })));\r\n\r\n    this.renderImage(changed);\r\n\r\n    if (this.cropped && this.limited) {\r\n      this.limitCropBox(true, true);\r\n    }\r\n  },\r\n  renderImage: function renderImage(changed) {\r\n    var canvasData = this.canvasData,\r\n        imageData = this.imageData;\r\n\r\n    var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\r\n    var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\r\n\r\n    assign(imageData, {\r\n      width: width,\r\n      height: height,\r\n      left: (canvasData.width - width) / 2,\r\n      top: (canvasData.height - height) / 2\r\n    });\r\n    setStyle(this.image, assign({\r\n      width: imageData.width,\r\n      height: imageData.height\r\n    }, getTransforms(assign({\r\n      translateX: imageData.left,\r\n      translateY: imageData.top\r\n    }, imageData))));\r\n\r\n    if (changed) {\r\n      this.output();\r\n    }\r\n  },\r\n  initCropBox: function initCropBox() {\r\n    var options = this.options,\r\n        canvasData = this.canvasData;\r\n    var aspectRatio = options.aspectRatio;\r\n\r\n    var autoCropArea = Number(options.autoCropArea) || 0.8;\r\n    var cropBoxData = {\r\n      width: canvasData.width,\r\n      height: canvasData.height\r\n    };\r\n\r\n    if (aspectRatio) {\r\n      if (canvasData.height * aspectRatio > canvasData.width) {\r\n        cropBoxData.height = cropBoxData.width / aspectRatio;\r\n      } else {\r\n        cropBoxData.width = cropBoxData.height * aspectRatio;\r\n      }\r\n    }\r\n\r\n    this.cropBoxData = cropBoxData;\r\n    this.limitCropBox(true, true);\r\n\r\n    // Initialize auto crop area\r\n    cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\r\n    cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\r\n\r\n    // The width/height of auto crop area must large than \"minWidth/Height\"\r\n    cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\r\n    cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\r\n    cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\r\n    cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\r\n    cropBoxData.oldLeft = cropBoxData.left;\r\n    cropBoxData.oldTop = cropBoxData.top;\r\n\r\n    this.initialCropBoxData = assign({}, cropBoxData);\r\n  },\r\n  limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\r\n    var options = this.options,\r\n        containerData = this.containerData,\r\n        canvasData = this.canvasData,\r\n        cropBoxData = this.cropBoxData,\r\n        limited = this.limited;\r\n    var aspectRatio = options.aspectRatio;\r\n\r\n\r\n    if (sizeLimited) {\r\n      var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\r\n      var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\r\n      var maxCropBoxWidth = Math.min(containerData.width, limited ? canvasData.width : containerData.width);\r\n      var maxCropBoxHeight = Math.min(containerData.height, limited ? canvasData.height : containerData.height);\r\n\r\n      // The min/maxCropBoxWidth/Height must be less than container's width/height\r\n      minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\r\n      minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\r\n\r\n      if (aspectRatio) {\r\n        if (minCropBoxWidth && minCropBoxHeight) {\r\n          if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\r\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\r\n          } else {\r\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\r\n          }\r\n        } else if (minCropBoxWidth) {\r\n          minCropBoxHeight = minCropBoxWidth / aspectRatio;\r\n        } else if (minCropBoxHeight) {\r\n          minCropBoxWidth = minCropBoxHeight * aspectRatio;\r\n        }\r\n\r\n        if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\r\n          maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\r\n        } else {\r\n          maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\r\n        }\r\n      }\r\n\r\n      // The minWidth/Height must be less than maxWidth/Height\r\n      cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\r\n      cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\r\n      cropBoxData.maxWidth = maxCropBoxWidth;\r\n      cropBoxData.maxHeight = maxCropBoxHeight;\r\n    }\r\n\r\n    if (positionLimited) {\r\n      if (limited) {\r\n        cropBoxData.minLeft = Math.max(0, canvasData.left);\r\n        cropBoxData.minTop = Math.max(0, canvasData.top);\r\n        cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\r\n        cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\r\n      } else {\r\n        cropBoxData.minLeft = 0;\r\n        cropBoxData.minTop = 0;\r\n        cropBoxData.maxLeft = containerData.width - cropBoxData.width;\r\n        cropBoxData.maxTop = containerData.height - cropBoxData.height;\r\n      }\r\n    }\r\n  },\r\n  renderCropBox: function renderCropBox() {\r\n    var options = this.options,\r\n        containerData = this.containerData,\r\n        cropBoxData = this.cropBoxData;\r\n\r\n\r\n    if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\r\n      cropBoxData.left = cropBoxData.oldLeft;\r\n    }\r\n\r\n    if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\r\n      cropBoxData.top = cropBoxData.oldTop;\r\n    }\r\n\r\n    cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\r\n    cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\r\n\r\n    this.limitCropBox(false, true);\r\n\r\n    cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\r\n    cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\r\n    cropBoxData.oldLeft = cropBoxData.left;\r\n    cropBoxData.oldTop = cropBoxData.top;\r\n\r\n    if (options.movable && options.cropBoxMovable) {\r\n      // Turn to move the canvas when the crop box is equal to the container\r\n      setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\r\n    }\r\n\r\n    setStyle(this.cropBox, assign({\r\n      width: cropBoxData.width,\r\n      height: cropBoxData.height\r\n    }, getTransforms({\r\n      translateX: cropBoxData.left,\r\n      translateY: cropBoxData.top\r\n    })));\r\n\r\n    if (this.cropped && this.limited) {\r\n      this.limitCanvas(true, true);\r\n    }\r\n\r\n    if (!this.disabled) {\r\n      this.output();\r\n    }\r\n  },\r\n  output: function output() {\r\n    this.preview();\r\n    dispatchEvent(this.element, EVENT_CROP, this.getData());\r\n  }\r\n};\r\n\r\nvar preview = {\r\n  initPreview: function initPreview() {\r\n    var crossOrigin = this.crossOrigin;\r\n    var preview = this.options.preview;\r\n\r\n    var url = crossOrigin ? this.crossOriginUrl : this.url;\r\n    var image = document.createElement('img');\r\n\r\n    if (crossOrigin) {\r\n      image.crossOrigin = crossOrigin;\r\n    }\r\n\r\n    image.src = url;\r\n    this.viewBox.appendChild(image);\r\n    this.viewBoxImage = image;\r\n\r\n    if (!preview) {\r\n      return;\r\n    }\r\n\r\n    var previews = preview;\r\n\r\n    if (typeof preview === 'string') {\r\n      previews = this.element.ownerDocument.querySelectorAll(preview);\r\n    } else if (preview.querySelector) {\r\n      previews = [preview];\r\n    }\r\n\r\n    this.previews = previews;\r\n\r\n    forEach(previews, function (el) {\r\n      var img = document.createElement('img');\r\n\r\n      // Save the original size for recover\r\n      setData(el, DATA_PREVIEW, {\r\n        width: el.offsetWidth,\r\n        height: el.offsetHeight,\r\n        html: el.innerHTML\r\n      });\r\n\r\n      if (crossOrigin) {\r\n        img.crossOrigin = crossOrigin;\r\n      }\r\n\r\n      img.src = url;\r\n\r\n      /**\r\n       * Override img element styles\r\n       * Add `display:block` to avoid margin top issue\r\n       * Add `height:auto` to override `height` attribute on IE8\r\n       * (Occur only when margin-top <= -height)\r\n       */\r\n      img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\r\n\r\n      el.innerHTML = '';\r\n      el.appendChild(img);\r\n    });\r\n  },\r\n  resetPreview: function resetPreview() {\r\n    forEach(this.previews, function (element) {\r\n      var data = getData(element, DATA_PREVIEW);\r\n\r\n      setStyle(element, {\r\n        width: data.width,\r\n        height: data.height\r\n      });\r\n\r\n      element.innerHTML = data.html;\r\n      removeData(element, DATA_PREVIEW);\r\n    });\r\n  },\r\n  preview: function preview() {\r\n    var imageData = this.imageData,\r\n        canvasData = this.canvasData,\r\n        cropBoxData = this.cropBoxData;\r\n    var cropBoxWidth = cropBoxData.width,\r\n        cropBoxHeight = cropBoxData.height;\r\n    var width = imageData.width,\r\n        height = imageData.height;\r\n\r\n    var left = cropBoxData.left - canvasData.left - imageData.left;\r\n    var top = cropBoxData.top - canvasData.top - imageData.top;\r\n\r\n    if (!this.cropped || this.disabled) {\r\n      return;\r\n    }\r\n\r\n    setStyle(this.viewBoxImage, assign({\r\n      width: width,\r\n      height: height\r\n    }, getTransforms(assign({\r\n      translateX: -left,\r\n      translateY: -top\r\n    }, imageData))));\r\n\r\n    forEach(this.previews, function (element) {\r\n      var data = getData(element, DATA_PREVIEW);\r\n      var originalWidth = data.width;\r\n      var originalHeight = data.height;\r\n      var newWidth = originalWidth;\r\n      var newHeight = originalHeight;\r\n      var ratio = 1;\r\n\r\n      if (cropBoxWidth) {\r\n        ratio = originalWidth / cropBoxWidth;\r\n        newHeight = cropBoxHeight * ratio;\r\n      }\r\n\r\n      if (cropBoxHeight && newHeight > originalHeight) {\r\n        ratio = originalHeight / cropBoxHeight;\r\n        newWidth = cropBoxWidth * ratio;\r\n        newHeight = originalHeight;\r\n      }\r\n\r\n      setStyle(element, {\r\n        width: newWidth,\r\n        height: newHeight\r\n      });\r\n\r\n      setStyle(element.getElementsByTagName('img')[0], assign({\r\n        width: width * ratio,\r\n        height: height * ratio\r\n      }, getTransforms(assign({\r\n        translateX: -left * ratio,\r\n        translateY: -top * ratio\r\n      }, imageData))));\r\n    });\r\n  }\r\n};\r\n\r\nvar events = {\r\n  bind: function bind() {\r\n    var element = this.element,\r\n        options = this.options,\r\n        cropper = this.cropper;\r\n\r\n\r\n    if (isFunction(options.cropstart)) {\r\n      addListener(element, EVENT_CROP_START, options.cropstart);\r\n    }\r\n\r\n    if (isFunction(options.cropmove)) {\r\n      addListener(element, EVENT_CROP_MOVE, options.cropmove);\r\n    }\r\n\r\n    if (isFunction(options.cropend)) {\r\n      addListener(element, EVENT_CROP_END, options.cropend);\r\n    }\r\n\r\n    if (isFunction(options.crop)) {\r\n      addListener(element, EVENT_CROP, options.crop);\r\n    }\r\n\r\n    if (isFunction(options.zoom)) {\r\n      addListener(element, EVENT_ZOOM, options.zoom);\r\n    }\r\n\r\n    addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\r\n\r\n    if (options.zoomable && options.zoomOnWheel) {\r\n      addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this));\r\n    }\r\n\r\n    if (options.toggleDragModeOnDblclick) {\r\n      addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\r\n    }\r\n\r\n    addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\r\n    addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\r\n\r\n    if (options.responsive) {\r\n      addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\r\n    }\r\n  },\r\n  unbind: function unbind() {\r\n    var element = this.element,\r\n        options = this.options,\r\n        cropper = this.cropper;\r\n\r\n\r\n    if (isFunction(options.cropstart)) {\r\n      removeListener(element, EVENT_CROP_START, options.cropstart);\r\n    }\r\n\r\n    if (isFunction(options.cropmove)) {\r\n      removeListener(element, EVENT_CROP_MOVE, options.cropmove);\r\n    }\r\n\r\n    if (isFunction(options.cropend)) {\r\n      removeListener(element, EVENT_CROP_END, options.cropend);\r\n    }\r\n\r\n    if (isFunction(options.crop)) {\r\n      removeListener(element, EVENT_CROP, options.crop);\r\n    }\r\n\r\n    if (isFunction(options.zoom)) {\r\n      removeListener(element, EVENT_ZOOM, options.zoom);\r\n    }\r\n\r\n    removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\r\n\r\n    if (options.zoomable && options.zoomOnWheel) {\r\n      removeListener(cropper, EVENT_WHEEL, this.onWheel);\r\n    }\r\n\r\n    if (options.toggleDragModeOnDblclick) {\r\n      removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\r\n    }\r\n\r\n    removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\r\n    removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\r\n\r\n    if (options.responsive) {\r\n      removeListener(window, EVENT_RESIZE, this.onResize);\r\n    }\r\n  }\r\n};\r\n\r\nvar handlers = {\r\n  resize: function resize() {\r\n    var options = this.options,\r\n        container = this.container,\r\n        containerData = this.containerData;\r\n\r\n    var minContainerWidth = Number(options.minContainerWidth) || 200;\r\n    var minContainerHeight = Number(options.minContainerHeight) || 100;\r\n\r\n    if (this.disabled || containerData.width <= minContainerWidth || containerData.height <= minContainerHeight) {\r\n      return;\r\n    }\r\n\r\n    var ratio = container.offsetWidth / containerData.width;\r\n\r\n    // Resize when width changed or height changed\r\n    if (ratio !== 1 || container.offsetHeight !== containerData.height) {\r\n      var canvasData = void 0;\r\n      var cropBoxData = void 0;\r\n\r\n      if (options.restore) {\r\n        canvasData = this.getCanvasData();\r\n        cropBoxData = this.getCropBoxData();\r\n      }\r\n\r\n      this.render();\r\n\r\n      if (options.restore) {\r\n        this.setCanvasData(forEach(canvasData, function (n, i) {\r\n          canvasData[i] = n * ratio;\r\n        }));\r\n        this.setCropBoxData(forEach(cropBoxData, function (n, i) {\r\n          cropBoxData[i] = n * ratio;\r\n        }));\r\n      }\r\n    }\r\n  },\r\n  dblclick: function dblclick() {\r\n    if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\r\n      return;\r\n    }\r\n\r\n    this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\r\n  },\r\n  wheel: function wheel(e) {\r\n    var _this = this;\r\n\r\n    var ratio = Number(this.options.wheelZoomRatio) || 0.1;\r\n    var delta = 1;\r\n\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    e.preventDefault();\r\n\r\n    // Limit wheel speed to prevent zoom too fast (#21)\r\n    if (this.wheeling) {\r\n      return;\r\n    }\r\n\r\n    this.wheeling = true;\r\n\r\n    setTimeout(function () {\r\n      _this.wheeling = false;\r\n    }, 50);\r\n\r\n    if (e.deltaY) {\r\n      delta = e.deltaY > 0 ? 1 : -1;\r\n    } else if (e.wheelDelta) {\r\n      delta = -e.wheelDelta / 120;\r\n    } else if (e.detail) {\r\n      delta = e.detail > 0 ? 1 : -1;\r\n    }\r\n\r\n    this.zoom(-delta * ratio, e);\r\n  },\r\n  cropStart: function cropStart(e) {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    var options = this.options,\r\n        pointers = this.pointers;\r\n\r\n    var action = void 0;\r\n\r\n    if (e.changedTouches) {\r\n      // Handle touch event\r\n      forEach(e.changedTouches, function (touch) {\r\n        pointers[touch.identifier] = getPointer(touch);\r\n      });\r\n    } else {\r\n      // Handle mouse event and pointer event\r\n      pointers[e.pointerId || 0] = getPointer(e);\r\n    }\r\n\r\n    if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\r\n      action = ACTION_ZOOM;\r\n    } else {\r\n      action = getData(e.target, DATA_ACTION);\r\n    }\r\n\r\n    if (!REGEXP_ACTIONS.test(action)) {\r\n      return;\r\n    }\r\n\r\n    if (dispatchEvent(this.element, EVENT_CROP_START, {\r\n      originalEvent: e,\r\n      action: action\r\n    }) === false) {\r\n      return;\r\n    }\r\n\r\n    e.preventDefault();\r\n\r\n    this.action = action;\r\n    this.cropping = false;\r\n\r\n    if (action === ACTION_CROP) {\r\n      this.cropping = true;\r\n      addClass(this.dragBox, CLASS_MODAL);\r\n    }\r\n  },\r\n  cropMove: function cropMove(e) {\r\n    var action = this.action;\r\n\r\n\r\n    if (this.disabled || !action) {\r\n      return;\r\n    }\r\n\r\n    var pointers = this.pointers;\r\n\r\n\r\n    e.preventDefault();\r\n\r\n    if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\r\n      originalEvent: e,\r\n      action: action\r\n    }) === false) {\r\n      return;\r\n    }\r\n\r\n    if (e.changedTouches) {\r\n      forEach(e.changedTouches, function (touch) {\r\n        assign(pointers[touch.identifier], getPointer(touch, true));\r\n      });\r\n    } else {\r\n      assign(pointers[e.pointerId || 0], getPointer(e, true));\r\n    }\r\n\r\n    this.change(e);\r\n  },\r\n  cropEnd: function cropEnd(e) {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    var action = this.action,\r\n        pointers = this.pointers;\r\n\r\n\r\n    if (e.changedTouches) {\r\n      forEach(e.changedTouches, function (touch) {\r\n        delete pointers[touch.identifier];\r\n      });\r\n    } else {\r\n      delete pointers[e.pointerId || 0];\r\n    }\r\n\r\n    if (!action) {\r\n      return;\r\n    }\r\n\r\n    e.preventDefault();\r\n\r\n    if (!Object.keys(pointers).length) {\r\n      this.action = '';\r\n    }\r\n\r\n    if (this.cropping) {\r\n      this.cropping = false;\r\n      toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\r\n    }\r\n\r\n    dispatchEvent(this.element, EVENT_CROP_END, {\r\n      originalEvent: e,\r\n      action: action\r\n    });\r\n  }\r\n};\r\n\r\nvar change = {\r\n  change: function change(e) {\r\n    var options = this.options,\r\n        canvasData = this.canvasData,\r\n        containerData = this.containerData,\r\n        cropBoxData = this.cropBoxData,\r\n        pointers = this.pointers;\r\n    var action = this.action;\r\n    var aspectRatio = options.aspectRatio;\r\n    var left = cropBoxData.left,\r\n        top = cropBoxData.top,\r\n        width = cropBoxData.width,\r\n        height = cropBoxData.height;\r\n\r\n    var right = left + width;\r\n    var bottom = top + height;\r\n    var minLeft = 0;\r\n    var minTop = 0;\r\n    var maxWidth = containerData.width;\r\n    var maxHeight = containerData.height;\r\n    var renderable = true;\r\n    var offset = void 0;\r\n\r\n    // Locking aspect ratio in \"free mode\" by holding shift key\r\n    if (!aspectRatio && e.shiftKey) {\r\n      aspectRatio = width && height ? width / height : 1;\r\n    }\r\n\r\n    if (this.limited) {\r\n      minLeft = cropBoxData.minLeft;\r\n      minTop = cropBoxData.minTop;\r\n\r\n      maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\r\n      maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\r\n    }\r\n\r\n    var pointer = pointers[Object.keys(pointers)[0]];\r\n    var range = {\r\n      x: pointer.endX - pointer.startX,\r\n      y: pointer.endY - pointer.startY\r\n    };\r\n    var check = function check(side) {\r\n      switch (side) {\r\n        case ACTION_EAST:\r\n          if (right + range.x > maxWidth) {\r\n            range.x = maxWidth - right;\r\n          }\r\n\r\n          break;\r\n\r\n        case ACTION_WEST:\r\n          if (left + range.x < minLeft) {\r\n            range.x = minLeft - left;\r\n          }\r\n\r\n          break;\r\n\r\n        case ACTION_NORTH:\r\n          if (top + range.y < minTop) {\r\n            range.y = minTop - top;\r\n          }\r\n\r\n          break;\r\n\r\n        case ACTION_SOUTH:\r\n          if (bottom + range.y > maxHeight) {\r\n            range.y = maxHeight - bottom;\r\n          }\r\n\r\n          break;\r\n\r\n        default:\r\n      }\r\n    };\r\n\r\n    switch (action) {\r\n      // Move crop box\r\n      case ACTION_ALL:\r\n        left += range.x;\r\n        top += range.y;\r\n        break;\r\n\r\n      // Resize crop box\r\n      case ACTION_EAST:\r\n        if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\r\n          renderable = false;\r\n          break;\r\n        }\r\n\r\n        check(ACTION_EAST);\r\n        width += range.x;\r\n\r\n        if (aspectRatio) {\r\n          height = width / aspectRatio;\r\n          top -= range.x / aspectRatio / 2;\r\n        }\r\n\r\n        if (width < 0) {\r\n          action = ACTION_WEST;\r\n          width = 0;\r\n        }\r\n\r\n        break;\r\n\r\n      case ACTION_NORTH:\r\n        if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\r\n          renderable = false;\r\n          break;\r\n        }\r\n\r\n        check(ACTION_NORTH);\r\n        height -= range.y;\r\n        top += range.y;\r\n\r\n        if (aspectRatio) {\r\n          width = height * aspectRatio;\r\n          left += range.y * aspectRatio / 2;\r\n        }\r\n\r\n        if (height < 0) {\r\n          action = ACTION_SOUTH;\r\n          height = 0;\r\n        }\r\n\r\n        break;\r\n\r\n      case ACTION_WEST:\r\n        if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\r\n          renderable = false;\r\n          break;\r\n        }\r\n\r\n        check(ACTION_WEST);\r\n        width -= range.x;\r\n        left += range.x;\r\n\r\n        if (aspectRatio) {\r\n          height = width / aspectRatio;\r\n          top += range.x / aspectRatio / 2;\r\n        }\r\n\r\n        if (width < 0) {\r\n          action = ACTION_EAST;\r\n          width = 0;\r\n        }\r\n\r\n        break;\r\n\r\n      case ACTION_SOUTH:\r\n        if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\r\n          renderable = false;\r\n          break;\r\n        }\r\n\r\n        check(ACTION_SOUTH);\r\n        height += range.y;\r\n\r\n        if (aspectRatio) {\r\n          width = height * aspectRatio;\r\n          left -= range.y * aspectRatio / 2;\r\n        }\r\n\r\n        if (height < 0) {\r\n          action = ACTION_NORTH;\r\n          height = 0;\r\n        }\r\n\r\n        break;\r\n\r\n      case ACTION_NORTH_EAST:\r\n        if (aspectRatio) {\r\n          if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\r\n            renderable = false;\r\n            break;\r\n          }\r\n\r\n          check(ACTION_NORTH);\r\n          height -= range.y;\r\n          top += range.y;\r\n          width = height * aspectRatio;\r\n        } else {\r\n          check(ACTION_NORTH);\r\n          check(ACTION_EAST);\r\n\r\n          if (range.x >= 0) {\r\n            if (right < maxWidth) {\r\n              width += range.x;\r\n            } else if (range.y <= 0 && top <= minTop) {\r\n              renderable = false;\r\n            }\r\n          } else {\r\n            width += range.x;\r\n          }\r\n\r\n          if (range.y <= 0) {\r\n            if (top > minTop) {\r\n              height -= range.y;\r\n              top += range.y;\r\n            }\r\n          } else {\r\n            height -= range.y;\r\n            top += range.y;\r\n          }\r\n        }\r\n\r\n        if (width < 0 && height < 0) {\r\n          action = ACTION_SOUTH_WEST;\r\n          height = 0;\r\n          width = 0;\r\n        } else if (width < 0) {\r\n          action = ACTION_NORTH_WEST;\r\n          width = 0;\r\n        } else if (height < 0) {\r\n          action = ACTION_SOUTH_EAST;\r\n          height = 0;\r\n        }\r\n\r\n        break;\r\n\r\n      case ACTION_NORTH_WEST:\r\n        if (aspectRatio) {\r\n          if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\r\n            renderable = false;\r\n            break;\r\n          }\r\n\r\n          check(ACTION_NORTH);\r\n          height -= range.y;\r\n          top += range.y;\r\n          width = height * aspectRatio;\r\n          left += range.y * aspectRatio;\r\n        } else {\r\n          check(ACTION_NORTH);\r\n          check(ACTION_WEST);\r\n\r\n          if (range.x <= 0) {\r\n            if (left > minLeft) {\r\n              width -= range.x;\r\n              left += range.x;\r\n            } else if (range.y <= 0 && top <= minTop) {\r\n              renderable = false;\r\n            }\r\n          } else {\r\n            width -= range.x;\r\n            left += range.x;\r\n          }\r\n\r\n          if (range.y <= 0) {\r\n            if (top > minTop) {\r\n              height -= range.y;\r\n              top += range.y;\r\n            }\r\n          } else {\r\n            height -= range.y;\r\n            top += range.y;\r\n          }\r\n        }\r\n\r\n        if (width < 0 && height < 0) {\r\n          action = ACTION_SOUTH_EAST;\r\n          height = 0;\r\n          width = 0;\r\n        } else if (width < 0) {\r\n          action = ACTION_NORTH_EAST;\r\n          width = 0;\r\n        } else if (height < 0) {\r\n          action = ACTION_SOUTH_WEST;\r\n          height = 0;\r\n        }\r\n\r\n        break;\r\n\r\n      case ACTION_SOUTH_WEST:\r\n        if (aspectRatio) {\r\n          if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\r\n            renderable = false;\r\n            break;\r\n          }\r\n\r\n          check(ACTION_WEST);\r\n          width -= range.x;\r\n          left += range.x;\r\n          height = width / aspectRatio;\r\n        } else {\r\n          check(ACTION_SOUTH);\r\n          check(ACTION_WEST);\r\n\r\n          if (range.x <= 0) {\r\n            if (left > minLeft) {\r\n              width -= range.x;\r\n              left += range.x;\r\n            } else if (range.y >= 0 && bottom >= maxHeight) {\r\n              renderable = false;\r\n            }\r\n          } else {\r\n            width -= range.x;\r\n            left += range.x;\r\n          }\r\n\r\n          if (range.y >= 0) {\r\n            if (bottom < maxHeight) {\r\n              height += range.y;\r\n            }\r\n          } else {\r\n            height += range.y;\r\n          }\r\n        }\r\n\r\n        if (width < 0 && height < 0) {\r\n          action = ACTION_NORTH_EAST;\r\n          height = 0;\r\n          width = 0;\r\n        } else if (width < 0) {\r\n          action = ACTION_SOUTH_EAST;\r\n          width = 0;\r\n        } else if (height < 0) {\r\n          action = ACTION_NORTH_WEST;\r\n          height = 0;\r\n        }\r\n\r\n        break;\r\n\r\n      case ACTION_SOUTH_EAST:\r\n        if (aspectRatio) {\r\n          if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\r\n            renderable = false;\r\n            break;\r\n          }\r\n\r\n          check(ACTION_EAST);\r\n          width += range.x;\r\n          height = width / aspectRatio;\r\n        } else {\r\n          check(ACTION_SOUTH);\r\n          check(ACTION_EAST);\r\n\r\n          if (range.x >= 0) {\r\n            if (right < maxWidth) {\r\n              width += range.x;\r\n            } else if (range.y >= 0 && bottom >= maxHeight) {\r\n              renderable = false;\r\n            }\r\n          } else {\r\n            width += range.x;\r\n          }\r\n\r\n          if (range.y >= 0) {\r\n            if (bottom < maxHeight) {\r\n              height += range.y;\r\n            }\r\n          } else {\r\n            height += range.y;\r\n          }\r\n        }\r\n\r\n        if (width < 0 && height < 0) {\r\n          action = ACTION_NORTH_WEST;\r\n          height = 0;\r\n          width = 0;\r\n        } else if (width < 0) {\r\n          action = ACTION_SOUTH_WEST;\r\n          width = 0;\r\n        } else if (height < 0) {\r\n          action = ACTION_NORTH_EAST;\r\n          height = 0;\r\n        }\r\n\r\n        break;\r\n\r\n      // Move canvas\r\n      case ACTION_MOVE:\r\n        this.move(range.x, range.y);\r\n        renderable = false;\r\n        break;\r\n\r\n      // Zoom canvas\r\n      case ACTION_ZOOM:\r\n        this.zoom(getMaxZoomRatio(pointers), e);\r\n        renderable = false;\r\n        break;\r\n\r\n      // Create crop box\r\n      case ACTION_CROP:\r\n        if (!range.x || !range.y) {\r\n          renderable = false;\r\n          break;\r\n        }\r\n\r\n        offset = getOffset(this.cropper);\r\n        left = pointer.startX - offset.left;\r\n        top = pointer.startY - offset.top;\r\n        width = cropBoxData.minWidth;\r\n        height = cropBoxData.minHeight;\r\n\r\n        if (range.x > 0) {\r\n          action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\r\n        } else if (range.x < 0) {\r\n          left -= width;\r\n          action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\r\n        }\r\n\r\n        if (range.y < 0) {\r\n          top -= height;\r\n        }\r\n\r\n        // Show the crop box if is hidden\r\n        if (!this.cropped) {\r\n          removeClass(this.cropBox, CLASS_HIDDEN);\r\n          this.cropped = true;\r\n\r\n          if (this.limited) {\r\n            this.limitCropBox(true, true);\r\n          }\r\n        }\r\n\r\n        break;\r\n\r\n      default:\r\n    }\r\n\r\n    if (renderable) {\r\n      cropBoxData.width = width;\r\n      cropBoxData.height = height;\r\n      cropBoxData.left = left;\r\n      cropBoxData.top = top;\r\n      this.action = action;\r\n      this.renderCropBox();\r\n    }\r\n\r\n    // Override\r\n    forEach(pointers, function (p) {\r\n      p.startX = p.endX;\r\n      p.startY = p.endY;\r\n    });\r\n  }\r\n};\r\n\r\nvar methods = {\r\n  // Show the crop box manually\r\n  crop: function crop() {\r\n    if (this.ready && !this.cropped && !this.disabled) {\r\n      this.cropped = true;\r\n      this.limitCropBox(true, true);\r\n\r\n      if (this.options.modal) {\r\n        addClass(this.dragBox, CLASS_MODAL);\r\n      }\r\n\r\n      removeClass(this.cropBox, CLASS_HIDDEN);\r\n      this.setCropBoxData(this.initialCropBoxData);\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n\r\n  // Reset the image and crop box to their initial states\r\n  reset: function reset() {\r\n    if (this.ready && !this.disabled) {\r\n      this.imageData = assign({}, this.initialImageData);\r\n      this.canvasData = assign({}, this.initialCanvasData);\r\n      this.cropBoxData = assign({}, this.initialCropBoxData);\r\n      this.renderCanvas();\r\n\r\n      if (this.cropped) {\r\n        this.renderCropBox();\r\n      }\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n\r\n  // Clear the crop box\r\n  clear: function clear() {\r\n    if (this.cropped && !this.disabled) {\r\n      assign(this.cropBoxData, {\r\n        left: 0,\r\n        top: 0,\r\n        width: 0,\r\n        height: 0\r\n      });\r\n\r\n      this.cropped = false;\r\n      this.renderCropBox();\r\n      this.limitCanvas(true, true);\r\n\r\n      // Render canvas after crop box rendered\r\n      this.renderCanvas();\r\n      removeClass(this.dragBox, CLASS_MODAL);\r\n      addClass(this.cropBox, CLASS_HIDDEN);\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n\r\n  /**\r\n   * Replace the image's src and rebuild the cropper\r\n   * @param {string} url - The new URL.\r\n   * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\r\n   * @returns {Cropper} this\r\n   */\r\n  replace: function replace(url) {\r\n    var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n\r\n    if (!this.disabled && url) {\r\n      if (this.isImg) {\r\n        this.element.src = url;\r\n      }\r\n\r\n      if (hasSameSize) {\r\n        this.url = url;\r\n        this.image.src = url;\r\n\r\n        if (this.ready) {\r\n          this.viewBoxImage.src = url;\r\n\r\n          forEach(this.previews, function (element) {\r\n            element.getElementsByTagName('img')[0].src = url;\r\n          });\r\n        }\r\n      } else {\r\n        if (this.isImg) {\r\n          this.replaced = true;\r\n        }\r\n\r\n        this.options.data = null;\r\n        this.uncreate();\r\n        this.load(url);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n\r\n  // Enable (unfreeze) the cropper\r\n  enable: function enable() {\r\n    if (this.ready && this.disabled) {\r\n      this.disabled = false;\r\n      removeClass(this.cropper, CLASS_DISABLED);\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n\r\n  // Disable (freeze) the cropper\r\n  disable: function disable() {\r\n    if (this.ready && !this.disabled) {\r\n      this.disabled = true;\r\n      addClass(this.cropper, CLASS_DISABLED);\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n\r\n  /**\r\n   * Destroy the cropper and remove the instance from the image\r\n   * @returns {Cropper} this\r\n   */\r\n  destroy: function destroy() {\r\n    var element = this.element;\r\n\r\n\r\n    if (!getData(element, NAMESPACE)) {\r\n      return this;\r\n    }\r\n\r\n    if (this.isImg && this.replaced) {\r\n      element.src = this.originalUrl;\r\n    }\r\n\r\n    this.uncreate();\r\n    removeData(element, NAMESPACE);\r\n\r\n    return this;\r\n  },\r\n\r\n\r\n  /**\r\n   * Move the canvas with relative offsets\r\n   * @param {number} offsetX - The relative offset distance on the x-axis.\r\n   * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\r\n   * @returns {Cropper} this\r\n   */\r\n  move: function move(offsetX) {\r\n    var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\r\n    var _canvasData = this.canvasData,\r\n        left = _canvasData.left,\r\n        top = _canvasData.top;\r\n\r\n\r\n    return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\r\n  },\r\n\r\n\r\n  /**\r\n   * Move the canvas to an absolute point\r\n   * @param {number} x - The x-axis coordinate.\r\n   * @param {number} [y=x] - The y-axis coordinate.\r\n   * @returns {Cropper} this\r\n   */\r\n  moveTo: function moveTo(x) {\r\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\r\n    var canvasData = this.canvasData;\r\n\r\n    var changed = false;\r\n\r\n    x = Number(x);\r\n    y = Number(y);\r\n\r\n    if (this.ready && !this.disabled && this.options.movable) {\r\n      if (isNumber(x)) {\r\n        canvasData.left = x;\r\n        changed = true;\r\n      }\r\n\r\n      if (isNumber(y)) {\r\n        canvasData.top = y;\r\n        changed = true;\r\n      }\r\n\r\n      if (changed) {\r\n        this.renderCanvas(true);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n\r\n  /**\r\n   * Zoom the canvas with a relative ratio\r\n   * @param {number} ratio - The target ratio.\r\n   * @param {Event} _originalEvent - The original event if any.\r\n   * @returns {Cropper} this\r\n   */\r\n  zoom: function zoom(ratio, _originalEvent) {\r\n    var canvasData = this.canvasData;\r\n\r\n\r\n    ratio = Number(ratio);\r\n\r\n    if (ratio < 0) {\r\n      ratio = 1 / (1 - ratio);\r\n    } else {\r\n      ratio = 1 + ratio;\r\n    }\r\n\r\n    return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\r\n  },\r\n\r\n\r\n  /**\r\n   * Zoom the canvas to an absolute ratio\r\n   * @param {number} ratio - The target ratio.\r\n   * @param {Object} pivot - The zoom pivot point coordinate.\r\n   * @param {Event} _originalEvent - The original event if any.\r\n   * @returns {Cropper} this\r\n   */\r\n  zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\r\n    var options = this.options,\r\n        canvasData = this.canvasData;\r\n    var width = canvasData.width,\r\n        height = canvasData.height,\r\n        naturalWidth = canvasData.naturalWidth,\r\n        naturalHeight = canvasData.naturalHeight;\r\n\r\n\r\n    ratio = Number(ratio);\r\n\r\n    if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\r\n      var newWidth = naturalWidth * ratio;\r\n      var newHeight = naturalHeight * ratio;\r\n\r\n      if (dispatchEvent(this.element, EVENT_ZOOM, {\r\n        originalEvent: _originalEvent,\r\n        oldRatio: width / naturalWidth,\r\n        ratio: newWidth / naturalWidth\r\n      }) === false) {\r\n        return this;\r\n      }\r\n\r\n      if (_originalEvent) {\r\n        var pointers = this.pointers;\r\n\r\n        var offset = getOffset(this.cropper);\r\n        var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\r\n          pageX: _originalEvent.pageX,\r\n          pageY: _originalEvent.pageY\r\n        };\r\n\r\n        // Zoom from the triggering point of the event\r\n        canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\r\n        canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\r\n      } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\r\n        canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\r\n        canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\r\n      } else {\r\n        // Zoom from the center of the canvas\r\n        canvasData.left -= (newWidth - width) / 2;\r\n        canvasData.top -= (newHeight - height) / 2;\r\n      }\r\n\r\n      canvasData.width = newWidth;\r\n      canvasData.height = newHeight;\r\n      this.renderCanvas(true);\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n\r\n  /**\r\n   * Rotate the canvas with a relative degree\r\n   * @param {number} degree - The rotate degree.\r\n   * @returns {Cropper} this\r\n   */\r\n  rotate: function rotate(degree) {\r\n    return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\r\n  },\r\n\r\n\r\n  /**\r\n   * Rotate the canvas to an absolute degree\r\n   * @param {number} degree - The rotate degree.\r\n   * @returns {Cropper} this\r\n   */\r\n  rotateTo: function rotateTo(degree) {\r\n    degree = Number(degree);\r\n\r\n    if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\r\n      this.imageData.rotate = degree % 360;\r\n      this.renderCanvas(true, true);\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n\r\n  /**\r\n   * Scale the image on the x-axis.\r\n   * @param {number} scaleX - The scale ratio on the x-axis.\r\n   * @returns {Cropper} this\r\n   */\r\n  scaleX: function scaleX(_scaleX) {\r\n    var scaleY = this.imageData.scaleY;\r\n\r\n\r\n    return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\r\n  },\r\n\r\n\r\n  /**\r\n   * Scale the image on the y-axis.\r\n   * @param {number} scaleY - The scale ratio on the y-axis.\r\n   * @returns {Cropper} this\r\n   */\r\n  scaleY: function scaleY(_scaleY) {\r\n    var scaleX = this.imageData.scaleX;\r\n\r\n\r\n    return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\r\n  },\r\n\r\n\r\n  /**\r\n   * Scale the image\r\n   * @param {number} scaleX - The scale ratio on the x-axis.\r\n   * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\r\n   * @returns {Cropper} this\r\n   */\r\n  scale: function scale(scaleX) {\r\n    var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\r\n    var imageData = this.imageData;\r\n\r\n    var transformed = false;\r\n\r\n    scaleX = Number(scaleX);\r\n    scaleY = Number(scaleY);\r\n\r\n    if (this.ready && !this.disabled && this.options.scalable) {\r\n      if (isNumber(scaleX)) {\r\n        imageData.scaleX = scaleX;\r\n        transformed = true;\r\n      }\r\n\r\n      if (isNumber(scaleY)) {\r\n        imageData.scaleY = scaleY;\r\n        transformed = true;\r\n      }\r\n\r\n      if (transformed) {\r\n        this.renderCanvas(true, true);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n\r\n  /**\r\n   * Get the cropped area position and size data (base on the original image)\r\n   * @param {boolean} [rounded=false] - Indicate if round the data values or not.\r\n   * @returns {Object} The result cropped data.\r\n   */\r\n  getData: function getData$$1() {\r\n    var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\r\n    var options = this.options,\r\n        imageData = this.imageData,\r\n        canvasData = this.canvasData,\r\n        cropBoxData = this.cropBoxData;\r\n\r\n    var data = void 0;\r\n\r\n    if (this.ready && this.cropped) {\r\n      data = {\r\n        x: cropBoxData.left - canvasData.left,\r\n        y: cropBoxData.top - canvasData.top,\r\n        width: cropBoxData.width,\r\n        height: cropBoxData.height\r\n      };\r\n\r\n      var ratio = imageData.width / imageData.naturalWidth;\r\n\r\n      forEach(data, function (n, i) {\r\n        n /= ratio;\r\n        data[i] = rounded ? Math.round(n) : n;\r\n      });\r\n    } else {\r\n      data = {\r\n        x: 0,\r\n        y: 0,\r\n        width: 0,\r\n        height: 0\r\n      };\r\n    }\r\n\r\n    if (options.rotatable) {\r\n      data.rotate = imageData.rotate || 0;\r\n    }\r\n\r\n    if (options.scalable) {\r\n      data.scaleX = imageData.scaleX || 1;\r\n      data.scaleY = imageData.scaleY || 1;\r\n    }\r\n\r\n    return data;\r\n  },\r\n\r\n\r\n  /**\r\n   * Set the cropped area position and size with new data\r\n   * @param {Object} data - The new data.\r\n   * @returns {Cropper} this\r\n   */\r\n  setData: function setData$$1(data) {\r\n    var options = this.options,\r\n        imageData = this.imageData,\r\n        canvasData = this.canvasData;\r\n\r\n    var cropBoxData = {};\r\n\r\n    if (this.ready && !this.disabled && isPlainObject(data)) {\r\n      var transformed = false;\r\n\r\n      if (options.rotatable) {\r\n        if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\r\n          imageData.rotate = data.rotate;\r\n          transformed = true;\r\n        }\r\n      }\r\n\r\n      if (options.scalable) {\r\n        if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\r\n          imageData.scaleX = data.scaleX;\r\n          transformed = true;\r\n        }\r\n\r\n        if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\r\n          imageData.scaleY = data.scaleY;\r\n          transformed = true;\r\n        }\r\n      }\r\n\r\n      if (transformed) {\r\n        this.renderCanvas(true, true);\r\n      }\r\n\r\n      var ratio = imageData.width / imageData.naturalWidth;\r\n\r\n      if (isNumber(data.x)) {\r\n        cropBoxData.left = data.x * ratio + canvasData.left;\r\n      }\r\n\r\n      if (isNumber(data.y)) {\r\n        cropBoxData.top = data.y * ratio + canvasData.top;\r\n      }\r\n\r\n      if (isNumber(data.width)) {\r\n        cropBoxData.width = data.width * ratio;\r\n      }\r\n\r\n      if (isNumber(data.height)) {\r\n        cropBoxData.height = data.height * ratio;\r\n      }\r\n\r\n      this.setCropBoxData(cropBoxData);\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n\r\n  /**\r\n   * Get the container size data.\r\n   * @returns {Object} The result container data.\r\n   */\r\n  getContainerData: function getContainerData() {\r\n    return this.ready ? assign({}, this.containerData) : {};\r\n  },\r\n\r\n\r\n  /**\r\n   * Get the image position and size data.\r\n   * @returns {Object} The result image data.\r\n   */\r\n  getImageData: function getImageData() {\r\n    return this.sized ? assign({}, this.imageData) : {};\r\n  },\r\n\r\n\r\n  /**\r\n   * Get the canvas position and size data.\r\n   * @returns {Object} The result canvas data.\r\n   */\r\n  getCanvasData: function getCanvasData() {\r\n    var canvasData = this.canvasData;\r\n\r\n    var data = {};\r\n\r\n    if (this.ready) {\r\n      forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\r\n        data[n] = canvasData[n];\r\n      });\r\n    }\r\n\r\n    return data;\r\n  },\r\n\r\n\r\n  /**\r\n   * Set the canvas position and size with new data.\r\n   * @param {Object} data - The new canvas data.\r\n   * @returns {Cropper} this\r\n   */\r\n  setCanvasData: function setCanvasData(data) {\r\n    var canvasData = this.canvasData;\r\n    var aspectRatio = canvasData.aspectRatio;\r\n\r\n\r\n    if (this.ready && !this.disabled && isPlainObject(data)) {\r\n      if (isNumber(data.left)) {\r\n        canvasData.left = data.left;\r\n      }\r\n\r\n      if (isNumber(data.top)) {\r\n        canvasData.top = data.top;\r\n      }\r\n\r\n      if (isNumber(data.width)) {\r\n        canvasData.width = data.width;\r\n        canvasData.height = data.width / aspectRatio;\r\n      } else if (isNumber(data.height)) {\r\n        canvasData.height = data.height;\r\n        canvasData.width = data.height * aspectRatio;\r\n      }\r\n\r\n      this.renderCanvas(true);\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n\r\n  /**\r\n   * Get the crop box position and size data.\r\n   * @returns {Object} The result crop box data.\r\n   */\r\n  getCropBoxData: function getCropBoxData() {\r\n    var cropBoxData = this.cropBoxData;\r\n\r\n    var data = void 0;\r\n\r\n    if (this.ready && this.cropped) {\r\n      data = {\r\n        left: cropBoxData.left,\r\n        top: cropBoxData.top,\r\n        width: cropBoxData.width,\r\n        height: cropBoxData.height\r\n      };\r\n    }\r\n\r\n    return data || {};\r\n  },\r\n\r\n\r\n  /**\r\n   * Set the crop box position and size with new data.\r\n   * @param {Object} data - The new crop box data.\r\n   * @returns {Cropper} this\r\n   */\r\n  setCropBoxData: function setCropBoxData(data) {\r\n    var cropBoxData = this.cropBoxData;\r\n    var aspectRatio = this.options.aspectRatio;\r\n\r\n    var widthChanged = void 0;\r\n    var heightChanged = void 0;\r\n\r\n    if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\r\n      if (isNumber(data.left)) {\r\n        cropBoxData.left = data.left;\r\n      }\r\n\r\n      if (isNumber(data.top)) {\r\n        cropBoxData.top = data.top;\r\n      }\r\n\r\n      if (isNumber(data.width) && data.width !== cropBoxData.width) {\r\n        widthChanged = true;\r\n        cropBoxData.width = data.width;\r\n      }\r\n\r\n      if (isNumber(data.height) && data.height !== cropBoxData.height) {\r\n        heightChanged = true;\r\n        cropBoxData.height = data.height;\r\n      }\r\n\r\n      if (aspectRatio) {\r\n        if (widthChanged) {\r\n          cropBoxData.height = cropBoxData.width / aspectRatio;\r\n        } else if (heightChanged) {\r\n          cropBoxData.width = cropBoxData.height * aspectRatio;\r\n        }\r\n      }\r\n\r\n      this.renderCropBox();\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n\r\n  /**\r\n   * Get a canvas drawn the cropped image.\r\n   * @param {Object} [options={}] - The config options.\r\n   * @returns {HTMLCanvasElement} - The result canvas.\r\n   */\r\n  getCroppedCanvas: function getCroppedCanvas() {\r\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n\r\n    if (!this.ready || !window.HTMLCanvasElement) {\r\n      return null;\r\n    }\r\n\r\n    var canvasData = this.canvasData;\r\n\r\n    var source = getSourceCanvas(this.image, this.imageData, canvasData, options);\r\n\r\n    // Returns the source canvas if it is not cropped.\r\n    if (!this.cropped) {\r\n      return source;\r\n    }\r\n\r\n    var _getData = this.getData(),\r\n        initialX = _getData.x,\r\n        initialY = _getData.y,\r\n        initialWidth = _getData.width,\r\n        initialHeight = _getData.height;\r\n\r\n    var ratio = source.width / Math.floor(canvasData.naturalWidth);\r\n\r\n    if (ratio !== 1) {\r\n      initialX *= ratio;\r\n      initialY *= ratio;\r\n      initialWidth *= ratio;\r\n      initialHeight *= ratio;\r\n    }\r\n\r\n    var aspectRatio = initialWidth / initialHeight;\r\n    var maxSizes = getAdjustedSizes({\r\n      aspectRatio: aspectRatio,\r\n      width: options.maxWidth || Infinity,\r\n      height: options.maxHeight || Infinity\r\n    });\r\n    var minSizes = getAdjustedSizes({\r\n      aspectRatio: aspectRatio,\r\n      width: options.minWidth || 0,\r\n      height: options.minHeight || 0\r\n    }, 'cover');\r\n\r\n    var _getAdjustedSizes = getAdjustedSizes({\r\n      aspectRatio: aspectRatio,\r\n      width: options.width || (ratio !== 1 ? source.width : initialWidth),\r\n      height: options.height || (ratio !== 1 ? source.height : initialHeight)\r\n    }),\r\n        width = _getAdjustedSizes.width,\r\n        height = _getAdjustedSizes.height;\r\n\r\n    width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\r\n    height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\r\n\r\n    var canvas = document.createElement('canvas');\r\n    var context = canvas.getContext('2d');\r\n\r\n    canvas.width = normalizeDecimalNumber(width);\r\n    canvas.height = normalizeDecimalNumber(height);\r\n\r\n    context.fillStyle = options.fillColor || 'transparent';\r\n    context.fillRect(0, 0, width, height);\r\n\r\n    var _options$imageSmoothi = options.imageSmoothingEnabled,\r\n        imageSmoothingEnabled = _options$imageSmoothi === undefined ? true : _options$imageSmoothi,\r\n        imageSmoothingQuality = options.imageSmoothingQuality;\r\n\r\n\r\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\r\n\r\n    if (imageSmoothingQuality) {\r\n      context.imageSmoothingQuality = imageSmoothingQuality;\r\n    }\r\n\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\r\n    var sourceWidth = source.width;\r\n    var sourceHeight = source.height;\r\n\r\n    // Source canvas parameters\r\n    var srcX = initialX;\r\n    var srcY = initialY;\r\n    var srcWidth = void 0;\r\n    var srcHeight = void 0;\r\n\r\n    // Destination canvas parameters\r\n    var dstX = void 0;\r\n    var dstY = void 0;\r\n    var dstWidth = void 0;\r\n    var dstHeight = void 0;\r\n\r\n    if (srcX <= -initialWidth || srcX > sourceWidth) {\r\n      srcX = 0;\r\n      srcWidth = 0;\r\n      dstX = 0;\r\n      dstWidth = 0;\r\n    } else if (srcX <= 0) {\r\n      dstX = -srcX;\r\n      srcX = 0;\r\n      srcWidth = Math.min(sourceWidth, initialWidth + srcX);\r\n      dstWidth = srcWidth;\r\n    } else if (srcX <= sourceWidth) {\r\n      dstX = 0;\r\n      srcWidth = Math.min(initialWidth, sourceWidth - srcX);\r\n      dstWidth = srcWidth;\r\n    }\r\n\r\n    if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\r\n      srcY = 0;\r\n      srcHeight = 0;\r\n      dstY = 0;\r\n      dstHeight = 0;\r\n    } else if (srcY <= 0) {\r\n      dstY = -srcY;\r\n      srcY = 0;\r\n      srcHeight = Math.min(sourceHeight, initialHeight + srcY);\r\n      dstHeight = srcHeight;\r\n    } else if (srcY <= sourceHeight) {\r\n      dstY = 0;\r\n      srcHeight = Math.min(initialHeight, sourceHeight - srcY);\r\n      dstHeight = srcHeight;\r\n    }\r\n\r\n    // All the numerical parameters should be integer for `drawImage`\r\n    // https://github.com/fengyuanchen/cropper/issues/476\r\n    var params = [srcX, srcY, srcWidth, srcHeight];\r\n\r\n    // Avoid \"IndexSizeError\"\r\n    if (dstWidth > 0 && dstHeight > 0) {\r\n      var scale = width / initialWidth;\r\n\r\n      params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\r\n    }\r\n\r\n    context.drawImage.apply(context, [source].concat(toConsumableArray(params.map(function (param) {\r\n      return Math.floor(normalizeDecimalNumber(param));\r\n    }))));\r\n\r\n    return canvas;\r\n  },\r\n\r\n\r\n  /**\r\n   * Change the aspect ratio of the crop box.\r\n   * @param {number} aspectRatio - The new aspect ratio.\r\n   * @returns {Cropper} this\r\n   */\r\n  setAspectRatio: function setAspectRatio(aspectRatio) {\r\n    var options = this.options;\r\n\r\n\r\n    if (!this.disabled && !isUndefined(aspectRatio)) {\r\n      // 0 -> NaN\r\n      options.aspectRatio = Math.max(0, aspectRatio) || NaN;\r\n\r\n      if (this.ready) {\r\n        this.initCropBox();\r\n\r\n        if (this.cropped) {\r\n          this.renderCropBox();\r\n        }\r\n      }\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n\r\n  /**\r\n   * Change the drag mode.\r\n   * @param {string} mode - The new drag mode.\r\n   * @returns {Cropper} this\r\n   */\r\n  setDragMode: function setDragMode(mode) {\r\n    var options = this.options,\r\n        dragBox = this.dragBox,\r\n        face = this.face;\r\n\r\n\r\n    if (this.ready && !this.disabled) {\r\n      var croppable = mode === DRAG_MODE_CROP;\r\n      var movable = options.movable && mode === DRAG_MODE_MOVE;\r\n\r\n      mode = croppable || movable ? mode : DRAG_MODE_NONE;\r\n\r\n      options.dragMode = mode;\r\n      setData(dragBox, DATA_ACTION, mode);\r\n      toggleClass(dragBox, CLASS_CROP, croppable);\r\n      toggleClass(dragBox, CLASS_MOVE, movable);\r\n\r\n      if (!options.cropBoxMovable) {\r\n        // Sync drag mode to crop box when it is not movable\r\n        setData(face, DATA_ACTION, mode);\r\n        toggleClass(face, CLASS_CROP, croppable);\r\n        toggleClass(face, CLASS_MOVE, movable);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n};\r\n\r\nvar AnotherCropper = WINDOW.Cropper;\r\n\r\nvar Cropper = function () {\r\n  /**\r\n   * Create a new Cropper.\r\n   * @param {Element} element - The target element for cropping.\r\n   * @param {Object} [options={}] - The configuration options.\r\n   */\r\n  function Cropper(element) {\r\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n    classCallCheck(this, Cropper);\r\n\r\n    if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\r\n      throw new Error('The first argument is required and must be an <img> or <canvas> element.');\r\n    }\r\n\r\n    this.element = element;\r\n    this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\r\n    this.cropped = false;\r\n    this.disabled = false;\r\n    this.pointers = {};\r\n    this.ready = false;\r\n    this.reloading = false;\r\n    this.replaced = false;\r\n    this.sized = false;\r\n    this.sizing = false;\r\n    this.init();\r\n  }\r\n\r\n  createClass(Cropper, [{\r\n    key: 'init',\r\n    value: function init() {\r\n      var element = this.element;\r\n\r\n      var tagName = element.tagName.toLowerCase();\r\n      var url = void 0;\r\n\r\n      if (getData(element, NAMESPACE)) {\r\n        return;\r\n      }\r\n\r\n      setData(element, NAMESPACE, this);\r\n\r\n      if (tagName === 'img') {\r\n        this.isImg = true;\r\n\r\n        // e.g.: \"img/picture.jpg\"\r\n        url = element.getAttribute('src') || '';\r\n        this.originalUrl = url;\r\n\r\n        // Stop when it's a blank image\r\n        if (!url) {\r\n          return;\r\n        }\r\n\r\n        // e.g.: \"http://example.com/img/picture.jpg\"\r\n        url = element.src;\r\n      } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\r\n        url = element.toDataURL();\r\n      }\r\n\r\n      this.load(url);\r\n    }\r\n  }, {\r\n    key: 'load',\r\n    value: function load(url) {\r\n      var _this = this;\r\n\r\n      if (!url) {\r\n        return;\r\n      }\r\n\r\n      this.url = url;\r\n      this.imageData = {};\r\n\r\n      var element = this.element,\r\n          options = this.options;\r\n\r\n\r\n      if (!options.checkOrientation || !window.ArrayBuffer) {\r\n        this.clone();\r\n        return;\r\n      }\r\n\r\n      // XMLHttpRequest disallows to open a Data URL in some browsers like IE11 and Safari\r\n      if (REGEXP_DATA_URL.test(url)) {\r\n        if (REGEXP_DATA_URL_JPEG.test(url)) {\r\n          this.read(dataURLToArrayBuffer(url));\r\n        } else {\r\n          this.clone();\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      var xhr = new XMLHttpRequest();\r\n\r\n      this.reloading = true;\r\n      this.xhr = xhr;\r\n\r\n      var done = function done() {\r\n        _this.reloading = false;\r\n        _this.xhr = null;\r\n      };\r\n\r\n      xhr.ontimeout = done;\r\n      xhr.onabort = done;\r\n      xhr.onerror = function () {\r\n        done();\r\n        _this.clone();\r\n      };\r\n\r\n      xhr.onload = function () {\r\n        done();\r\n        _this.read(xhr.response);\r\n      };\r\n\r\n      // Bust cache when there is a \"crossOrigin\" property\r\n      if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\r\n        url = addTimestamp(url);\r\n      }\r\n\r\n      xhr.open('get', url);\r\n      xhr.responseType = 'arraybuffer';\r\n      xhr.withCredentials = element.crossOrigin === 'use-credentials';\r\n      xhr.send();\r\n    }\r\n  }, {\r\n    key: 'read',\r\n    value: function read(arrayBuffer) {\r\n      var options = this.options,\r\n          imageData = this.imageData;\r\n\r\n      var orientation = getOrientation(arrayBuffer);\r\n      var rotate = 0;\r\n      var scaleX = 1;\r\n      var scaleY = 1;\r\n\r\n      if (orientation > 1) {\r\n        this.url = arrayBufferToDataURL(arrayBuffer, 'image/jpeg');\r\n\r\n        var _parseOrientation = parseOrientation(orientation);\r\n\r\n        rotate = _parseOrientation.rotate;\r\n        scaleX = _parseOrientation.scaleX;\r\n        scaleY = _parseOrientation.scaleY;\r\n      }\r\n\r\n      if (options.rotatable) {\r\n        imageData.rotate = rotate;\r\n      }\r\n\r\n      if (options.scalable) {\r\n        imageData.scaleX = scaleX;\r\n        imageData.scaleY = scaleY;\r\n      }\r\n\r\n      this.clone();\r\n    }\r\n  }, {\r\n    key: 'clone',\r\n    value: function clone() {\r\n      var element = this.element,\r\n          url = this.url;\r\n\r\n      var crossOrigin = void 0;\r\n      var crossOriginUrl = void 0;\r\n\r\n      if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\r\n        crossOrigin = element.crossOrigin;\r\n\r\n\r\n        if (crossOrigin) {\r\n          crossOriginUrl = url;\r\n        } else {\r\n          crossOrigin = 'anonymous';\r\n\r\n          // Bust cache when there is not a \"crossOrigin\" property\r\n          crossOriginUrl = addTimestamp(url);\r\n        }\r\n      }\r\n\r\n      this.crossOrigin = crossOrigin;\r\n      this.crossOriginUrl = crossOriginUrl;\r\n\r\n      var image = document.createElement('img');\r\n\r\n      if (crossOrigin) {\r\n        image.crossOrigin = crossOrigin;\r\n      }\r\n\r\n      image.src = crossOriginUrl || url;\r\n\r\n      var start = this.start.bind(this);\r\n      var stop = this.stop.bind(this);\r\n\r\n      this.image = image;\r\n      this.onStart = start;\r\n      this.onStop = stop;\r\n\r\n      if (this.isImg) {\r\n        if (element.complete) {\r\n          this.timeout = setTimeout(start, 0);\r\n        } else {\r\n          addListener(element, EVENT_LOAD, start, {\r\n            once: true\r\n          });\r\n        }\r\n      } else {\r\n        image.onload = start;\r\n        image.onerror = stop;\r\n        addClass(image, CLASS_HIDE);\r\n        element.parentNode.insertBefore(image, element.nextSibling);\r\n      }\r\n    }\r\n  }, {\r\n    key: 'start',\r\n    value: function start(event) {\r\n      var _this2 = this;\r\n\r\n      var image = this.isImg ? this.element : this.image;\r\n\r\n      if (event) {\r\n        image.onload = null;\r\n        image.onerror = null;\r\n      }\r\n\r\n      this.sizing = true;\r\n\r\n      var IS_SAFARI = WINDOW.navigator && /(Macintosh|iPhone|iPod|iPad).*AppleWebKit/i.test(WINDOW.navigator.userAgent);\r\n      var done = function done(naturalWidth, naturalHeight) {\r\n        assign(_this2.imageData, {\r\n          naturalWidth: naturalWidth,\r\n          naturalHeight: naturalHeight,\r\n          aspectRatio: naturalWidth / naturalHeight\r\n        });\r\n        _this2.sizing = false;\r\n        _this2.sized = true;\r\n        _this2.build();\r\n      };\r\n\r\n      // Modern browsers (except Safari)\r\n      if (image.naturalWidth && !IS_SAFARI) {\r\n        done(image.naturalWidth, image.naturalHeight);\r\n        return;\r\n      }\r\n\r\n      var sizingImage = document.createElement('img');\r\n      var body = document.body || document.documentElement;\r\n\r\n      this.sizingImage = sizingImage;\r\n\r\n      sizingImage.onload = function () {\r\n        done(sizingImage.width, sizingImage.height);\r\n\r\n        if (!IS_SAFARI) {\r\n          body.removeChild(sizingImage);\r\n        }\r\n      };\r\n\r\n      sizingImage.src = image.src;\r\n\r\n      // iOS Safari will convert the image automatically\r\n      // with its orientation once append it into DOM (#279)\r\n      if (!IS_SAFARI) {\r\n        sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\r\n        body.appendChild(sizingImage);\r\n      }\r\n    }\r\n  }, {\r\n    key: 'stop',\r\n    value: function stop() {\r\n      var image = this.image;\r\n\r\n\r\n      image.onload = null;\r\n      image.onerror = null;\r\n      image.parentNode.removeChild(image);\r\n      this.image = null;\r\n    }\r\n  }, {\r\n    key: 'build',\r\n    value: function build() {\r\n      if (!this.sized || this.ready) {\r\n        return;\r\n      }\r\n\r\n      var element = this.element,\r\n          options = this.options,\r\n          image = this.image;\r\n\r\n      // Create cropper elements\r\n\r\n      var container = element.parentNode;\r\n      var template = document.createElement('div');\r\n\r\n      template.innerHTML = TEMPLATE;\r\n\r\n      var cropper = template.querySelector('.' + NAMESPACE + '-container');\r\n      var canvas = cropper.querySelector('.' + NAMESPACE + '-canvas');\r\n      var dragBox = cropper.querySelector('.' + NAMESPACE + '-drag-box');\r\n      var cropBox = cropper.querySelector('.' + NAMESPACE + '-crop-box');\r\n      var face = cropBox.querySelector('.' + NAMESPACE + '-face');\r\n\r\n      this.container = container;\r\n      this.cropper = cropper;\r\n      this.canvas = canvas;\r\n      this.dragBox = dragBox;\r\n      this.cropBox = cropBox;\r\n      this.viewBox = cropper.querySelector('.' + NAMESPACE + '-view-box');\r\n      this.face = face;\r\n\r\n      canvas.appendChild(image);\r\n\r\n      // Hide the original image\r\n      addClass(element, CLASS_HIDDEN);\r\n\r\n      // Inserts the cropper after to the current image\r\n      container.insertBefore(cropper, element.nextSibling);\r\n\r\n      // Show the image if is hidden\r\n      if (!this.isImg) {\r\n        removeClass(image, CLASS_HIDE);\r\n      }\r\n\r\n      this.initPreview();\r\n      this.bind();\r\n\r\n      options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\r\n      options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\r\n\r\n      addClass(cropBox, CLASS_HIDDEN);\r\n\r\n      if (!options.guides) {\r\n        addClass(cropBox.getElementsByClassName(NAMESPACE + '-dashed'), CLASS_HIDDEN);\r\n      }\r\n\r\n      if (!options.center) {\r\n        addClass(cropBox.getElementsByClassName(NAMESPACE + '-center'), CLASS_HIDDEN);\r\n      }\r\n\r\n      if (options.background) {\r\n        addClass(cropper, NAMESPACE + '-bg');\r\n      }\r\n\r\n      if (!options.highlight) {\r\n        addClass(face, CLASS_INVISIBLE);\r\n      }\r\n\r\n      if (options.cropBoxMovable) {\r\n        addClass(face, CLASS_MOVE);\r\n        setData(face, DATA_ACTION, ACTION_ALL);\r\n      }\r\n\r\n      if (!options.cropBoxResizable) {\r\n        addClass(cropBox.getElementsByClassName(NAMESPACE + '-line'), CLASS_HIDDEN);\r\n        addClass(cropBox.getElementsByClassName(NAMESPACE + '-point'), CLASS_HIDDEN);\r\n      }\r\n\r\n      this.render();\r\n      this.ready = true;\r\n      this.setDragMode(options.dragMode);\r\n\r\n      if (options.autoCrop) {\r\n        this.crop();\r\n      }\r\n\r\n      this.setData(options.data);\r\n\r\n      if (isFunction(options.ready)) {\r\n        addListener(element, EVENT_READY, options.ready, {\r\n          once: true\r\n        });\r\n      }\r\n\r\n      dispatchEvent(element, EVENT_READY);\r\n    }\r\n  }, {\r\n    key: 'unbuild',\r\n    value: function unbuild() {\r\n      if (!this.ready) {\r\n        return;\r\n      }\r\n\r\n      this.ready = false;\r\n      this.unbind();\r\n      this.resetPreview();\r\n      this.cropper.parentNode.removeChild(this.cropper);\r\n      removeClass(this.element, CLASS_HIDDEN);\r\n    }\r\n  }, {\r\n    key: 'uncreate',\r\n    value: function uncreate() {\r\n      var element = this.element;\r\n\r\n\r\n      if (this.ready) {\r\n        this.unbuild();\r\n        this.ready = false;\r\n        this.cropped = false;\r\n      } else if (this.sizing) {\r\n        this.sizingImage.onload = null;\r\n        this.sizing = false;\r\n        this.sized = false;\r\n      } else if (this.reloading) {\r\n        this.xhr.abort();\r\n      } else if (this.isImg) {\r\n        if (element.complete) {\r\n          clearTimeout(this.timeout);\r\n        } else {\r\n          removeListener(element, EVENT_LOAD, this.onStart);\r\n        }\r\n      } else if (this.image) {\r\n        this.stop();\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Get the no conflict cropper class.\r\n     * @returns {Cropper} The cropper class.\r\n     */\r\n\r\n  }], [{\r\n    key: 'noConflict',\r\n    value: function noConflict() {\r\n      window.Cropper = AnotherCropper;\r\n      return Cropper;\r\n    }\r\n\r\n    /**\r\n     * Change the default options.\r\n     * @param {Object} options - The new default options.\r\n     */\r\n\r\n  }, {\r\n    key: 'setDefaults',\r\n    value: function setDefaults(options) {\r\n      assign(DEFAULTS, isPlainObject(options) && options);\r\n    }\r\n  }]);\r\n  return Cropper;\r\n}();\r\n\r\nassign(Cropper.prototype, render, preview, events, handlers, change, methods);\r\n\r\nexport default Cropper;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/cropperjs/dist/cropper.esm.js\n// module id = null\n// module chunks = ","\nimport Cropper from 'cropperjs'\nimport Cell from 'vux/src/components/cell/index.vue'\nimport CellBox from 'vux/src/components/cell-box/index.vue'\n\nimport uploadFile from '@/api/uploadFile'\nimport { dataURLtoFile } from '@/assets/js/utils'\n\nexport default {\nprops: {\n\nheaderImage: {\ntype: String,\ndefault: ''\n}\n},\ndata () {\nreturn {\npicValue: '',\ncropper: '',\ncroppable: false,\npanel: false,\nurl: '',\npostHeaderImg: '',\nheightAll: 0\n}\n},\nmounted () {\n\nvar self = this\nvar image = document.getElementById('image')\nthis.cropper = new Cropper(image, {\naspectRatio: 1,\nviewMode: 1,\nbackground: false,\nzoomable: false,\nready: function () {\nself.croppable = true\n}\n})\n},\ncomponents: {\nCell,\nCellBox\n},\nmethods: {\npublishDynamic () {\nthis.$refs.selectImg.dispatchEvent(new MouseEvent('click'))\n},\ngetObjectURL (file) {\nvar url = null\nif (window.createObjectURL !== undefined) { // basic\nurl = window.createObjectURL(file)\n} else if (window.URL !== undefined) { // mozilla(firefox)\nurl = window.URL.createObjectURL(file)\n} else if (window.webkitURL !== undefined) { // webkit or chrome\nurl = window.webkitURL.createObjectURL(file)\n}\nreturn url\n},\nchange (e) {\nlet files = e.target.files || e.dataTransfer.files\nif (!files.length) return\nif (files[0].size === 0) return\nthis.panel = true\nthis.picValue = files[0]\nthis.url = this.getObjectURL(this.picValue)\n\nif (this.cropper) {\nthis.cropper.replace(this.url)\n}\nthis.panel = true\n},\ncrop () {\nthis.panel = false\nvar croppedCanvas\nvar roundedCanvas\nif (!this.croppable) {\nreturn\n}\n\ncroppedCanvas = this.cropper.getCroppedCanvas()\n\nroundedCanvas = this.getRoundedCanvas(croppedCanvas)\nthis.postHeaderImg = roundedCanvas.toDataURL()\n\nthis.$emit('getHeaderImage', roundedCanvas.toDataURL())\n\nthis.postImg(dataURLtoFile(roundedCanvas.toDataURL('image/png')))\n},\ngetRoundedCanvas (sourceCanvas) {\nvar canvas = document.createElement('canvas')\nvar context = canvas.getContext('2d')\nvar width = sourceCanvas.width\nvar height = sourceCanvas.height\n\nif (width > 100) {\nwidth = 100\n}\nif (height > 100) {\nheight = 100\n}\ncanvas.width = width\ncanvas.height = height\ncontext.imageSmoothingEnabled = true\ncontext.drawImage(sourceCanvas, 0, 0, width, height)\ncontext.globalCompositeOperation = 'destination-in'\ncontext.beginPath()\ncontext.arc(width / 2, height / 2, Math.min(width, height) / 2, 0, 2 * Math.PI, true)\ncontext.fill()\nreturn canvas\n},\npostImg (file) {\nuploadFile(this, [file], (data) => {\nthis.$emit('getHeader', data[0].downloadPath)\n})\n}\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/order/cropper.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"demo\"}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.panel),expression:\"panel\"}],staticClass:\"container\"},[_c('div',[_c('img',{attrs:{\"id\":\"image\",\"src\":_vm.url,\"alt\":\"Picture\"}})]),_vm._v(\" \"),_c('button',{attrs:{\"type\":\"button\",\"id\":\"button\"},on:{\"click\":_vm.crop}},[_vm._v(\"确定\")])]),_vm._v(\" \"),_c('div',{staticClass:\"pictureWrapper\"},[_c('cell-box',{attrs:{\"is-link\":\"\"},nativeOn:{\"click\":function($event){_vm.publishDynamic($event)}}},[_c('div',{staticClass:\"show\"},[_c('div',{staticClass:\"picture\",style:('backgroundImage:url('+ _vm.headerImage +')')})]),_vm._v(\" \"),_c('span',{staticClass:\"imagetext\"},[_vm._v(\"修改头像\")])]),_vm._v(\" \"),_c('div',[_c('input',{ref:\"selectImg\",staticStyle:{\"display\":\"none\"},attrs:{\"type\":\"file\",\"id\":\"change\",\"accept\":\"image\"},on:{\"change\":_vm.change}}),_vm._v(\" \"),_c('label',{attrs:{\"for\":\"change\"}})])],1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-db128e90\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vux-loader/src/before-template-compiler-loader.js!./node_modules/vux-loader/src/template-loader.js!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/order/cropper.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-db128e90\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!stylus-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vux-loader/src/style-loader.js!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./cropper.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vux-loader/src/script-loader.js!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./cropper.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vux-loader/src/script-loader.js!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./cropper.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-db128e90\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vux-loader/src/before-template-compiler-loader.js!../../../node_modules/vux-loader/src/template-loader.js!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./cropper.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/order/cropper.vue\n// module id = null\n// module chunks = ","\nimport VHeader from '@/components/v-header/v-header'\nimport imageTop from '@/assets/img/default_avatar.png'\nimport { isIOS, isIphoneX } from '@/assets/js/brower'\nimport Cropper from '@/components/order/cropper'\nimport Scroller from 'vux/src/components/scroller/index.vue'\nimport Cell from 'vux/src/components/cell/index.vue'\nimport CellBox from 'vux/src/components/cell-box/index.vue'\nimport XInput from 'vux/src/components/x-input/index.vue'\nimport Group from 'vux/src/components/group/index.vue'\nimport Calendar from 'vux/src/components/calendar/index.vue'\nimport XTextarea from 'vux/src/components/x-textarea/index.vue'\nimport XButton from 'vux/src/components/x-button/index.vue'\nimport Datetime from 'vux/src/components/datetime/index.vue'\nimport Confirm from 'vux/src/components/confirm/index.vue'\nimport Flexbox from 'vux/src/components/flexbox/flexbox.vue'\nimport FlexboxItem from 'vux/src/components/flexbox/flexbox-item.vue'\n\nimport { localUser } from '@/assets/js/local'\nimport axios from '@/api/axiosApi'\n\nexport default {\ndata () {\nreturn {\nimageTop: imageTop,\nstyles: {\nheight: '0px'\n},\nuser: {\nnickname: '',\nrealName: '',\nphoneNum: '',\nemail: '',\nbirth: '',\nsignature: ''\n},\ndownloadPath: '',\nshowTextArea: false,\nsignatureCopy: '',\nheaderImage: ''\n}\n},\nmethods: {\npublishDynamic () {\nthis.$refs.selectImg.dispatchEvent(new MouseEvent('click'))\n},\nhandleSubmitUser () {\nif (this.user.nickname === '') {\nthis.$vux.toast.text('昵称不能为空', 'middle')\nreturn\n}\nthis.user.headUrl = this.user.uploadImg\naxios.put(this, '/v1/userInfo/' + this.user.id, {nickName: this.user.nickname, realName: this.user.nickname, email: this.user.email, birth: this.user.birth, signature: this.user.signature}, (data) => {\nlocalUser.set(this.user)\nthis.$vux.toast.text('更新个人信息成功', 'middle')\n/*\nconst JIM = this.$store.getters.JIM\nif (JIM) {\nJIM.updateSelfInfo({\nnickname: this.user.nickname\n})\n}\n*/\n})\n},\ntextAreaContent () {\nif (isIOS()) {\nthis.showTextArea = false\n} else {\nthis.showTextArea = true\n}\n},\nonCancel () {\n},\nonConfirm () {\nconst t = this.signatureCopy\nthis.user.signature = t\n},\nnewHeaderImage (newImg) {\nthis.user.uploadImg = newImg\nlocalUser.setItem('uploadImg', newImg)\nthis.$vux.toast.text('头像上传成功', 'middle')\naxios.put(this, '/v1/userInfo/' + this.user.id, {headUrl: newImg}, (data) => {\n})\n}\n},\ncreated () {\nlet obj = localUser.get()\nif (obj == null) {\nobj = {}\n} else {\nif (obj.uploadImg == null) {\nobj.uploadImg = ''\n}\nif (obj.signature == null || typeof obj.signature === 'undefined') {\nobj.signature = ''\n}\n}\nthis.user = obj\nthis.signatureCopy = obj.signature\nif (this.user.nickname === '' || this.user.nickname == null) {\nthis.user.nickname = '会员' + this.user.phoneNum\n}\n},\nmounted () {\nthis.styles.height = window.innerHeight - 64 + 'px'\n},\ncomponents: {\nVHeader,\nScroller,\nCell,\nCellBox,\nimageTop,\nXInput,\nCalendar,\nXTextarea,\nXButton,\nGroup,\nDatetime,\nConfirm,\nisIOS,\nisIphoneX,\nCropper,\nFlexbox,\nFlexboxItem\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/user/editmessage/personmessage.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"personmessage\"},[_c('v-header',{attrs:{\"title\":\"个人信息\"}}),_vm._v(\" \"),_c('scroller',{style:(_vm.styles),attrs:{\"bounce\":false}},[_c('div',{staticClass:\"personMessageWrapper\"},[_c('cropper',{attrs:{\"headerImage\":_vm.user.uploadImg || _vm.user.headUrl || _vm.imageTop},on:{\"getHeader\":_vm.newHeaderImage}}),_vm._v(\" \"),_c('x-input',{staticClass:\"centerbody nickname\",attrs:{\"name\":\"username\",\"placeholder\":\"请输入昵称\"},model:{value:(_vm.user.nickname),callback:function ($$v) {_vm.$set(_vm.user, \"nickname\", $$v)},expression:\"user.nickname\"}},[_c('p',{attrs:{\"slot\":\"label\"},slot:\"label\"},[_c('font',{attrs:{\"color\":\"red\"}},[_vm._v(\"*\")]),_vm._v(\"昵称\")],1)]),_vm._v(\" \"),_c('x-input',{staticClass:\"centerbody\",attrs:{\"title\":\"姓名\",\"name\":\"username\",\"placeholder\":\"请输入姓名\"},model:{value:(_vm.user.realName),callback:function ($$v) {_vm.$set(_vm.user, \"realName\", $$v)},expression:\"user.realName\"}}),_vm._v(\" \"),_c('div',{staticClass:\"phoneWrapper\"},[_c('flexbox',[_c('flexbox-item',{staticStyle:{\"padding-left\":\"15px\"},attrs:{\"span\":6/31}},[_c('div',{staticClass:\"flex-demo\"},[_vm._v(\"\\n                      手机号码\\n                    \")])]),_vm._v(\" \"),_c('flexbox-item',{attrs:{\"span\":25/31}},[_c('div',{staticClass:\"flex-demo\"},[_vm._v(\"\\n                    \"+_vm._s(_vm.user.phoneNum)+\"\\n                  \")])])],1)],1),_vm._v(\" \"),_c('x-input',{staticClass:\"centerbody email\",attrs:{\"name\":\"email\",\"title\":\"电子邮箱\",\"placeholder\":\"请输入邮箱地址\",\"is-type\":\"email\"},model:{value:(_vm.user.email),callback:function ($$v) {_vm.$set(_vm.user, \"email\", $$v)},expression:\"user.email\"}}),_vm._v(\" \"),_c('hr',{staticClass:\"hrline\"}),_vm._v(\" \"),_c('div',{staticClass:\"calendarWrapper\"},[_c('datetime',{staticClass:\"centerbody birthWrapper\",attrs:{\"title\":\"生日\"},model:{value:(_vm.user.birth),callback:function ($$v) {_vm.$set(_vm.user, \"birth\", $$v)},expression:\"user.birth\"}})],1),_vm._v(\" \"),_c('hr',{staticClass:\"hrline\"}),_vm._v(\" \"),_c('div',{staticClass:\"textareaWrapper\"},[_c('x-textarea',{staticClass:\"centerbody textAreaWrapper\",attrs:{\"title\":\"个性签名\",\"max\":30,\"placeholder\":\"请输入个性签名\"},on:{\"on-focus\":_vm.textAreaContent},model:{value:(_vm.user.signature),callback:function ($$v) {_vm.$set(_vm.user, \"signature\", $$v)},expression:\"user.signature\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"submit\"},[_c('x-button',{staticClass:\"submitButton\",attrs:{\"plain\":\"\",\"type\":\"primary\"},nativeOn:{\"click\":function($event){_vm.handleSubmitUser($event)}}},[_vm._v(\"提  交\")])],1)],1)]),_vm._v(\" \"),_c('div',{staticClass:\"alertWrapper alertWrapperMessage\"},[_c('confirm',{attrs:{\"placeholder\":\"请输入个性签名\",\"title\":\"个性签名\"},on:{\"on-confirm\":_vm.onConfirm},model:{value:(_vm.showTextArea),callback:function ($$v) {_vm.showTextArea=$$v},expression:\"showTextArea\"}},[_c('x-textarea',{staticStyle:{\"border\":\"1px solid #ECECED\"},attrs:{\"slot\":\"default\",\"max\":30},slot:\"default\",model:{value:(_vm.signatureCopy),callback:function ($$v) {_vm.signatureCopy=$$v},expression:\"signatureCopy\"}})],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-667f3408\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vux-loader/src/before-template-compiler-loader.js!./node_modules/vux-loader/src/template-loader.js!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/user/editmessage/personmessage.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-667f3408\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!stylus-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vux-loader/src/style-loader.js!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./personmessage.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vux-loader/src/script-loader.js!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./personmessage.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vux-loader/src/script-loader.js!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./personmessage.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-667f3408\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vux-loader/src/before-template-compiler-loader.js!../../../../node_modules/vux-loader/src/template-loader.js!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./personmessage.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-667f3408\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/user/editmessage/personmessage.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}